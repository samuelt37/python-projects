 (destroyctx 'domain_theory)

context domain_theory nil

;;;; The following 4 predicates constitute theory T1 whereas all the theory is
;;;; theory T2 in the results shown

(seg1 $x1 $x2)  (value $x1) (value $x2))
			    (fuzzy (0.0 0.0 k1 (+ k1 (/ k1 5.0)))
				   (sqrt (+ (* (- (xx2 $x2) (xx2 $x1))
					       (- (xx2 $x2) (xx2 $x1)))
					    (* (- (yy2 $x2) (yy2 $x1))
					       (- (yy2 $x2) (yy2 $x1)))))));

(adj $x1 $x2)  (value $x1) (value $x2))
		      (fuzzy (0.0 0.0 k1 (+ k1 (/ k1 5.0)))
			     (sqrt (+ (* (- (xx1 $x2)(xx1 $x1))
					 (- (xx1 $x2)(xx1 $x1)))
				      (* (- (yy1 $x2)(yy1 $x1))
					 (- (yy1 $x2)(yy1 $x1)))))));

(angle $x1 $x2) = (- (yy2 $x1) (yy1 $x1)) 0)
		    (fuzzy ((- k1 (/ k2 5.0)) k1 (+ k1 k2)
			    (+ k1 k2 (/ k2 5.0)))
			   (acos (/ (- (xx2 $x1) (xx1 $x1))
				    (size $x1))))
		    (fuzzy ((- k1 (/ k2 5.0)) k1 (+ k1 k2)
			    (+ k1 k2 (/ k2 5.0)))
			   (- (acos
				(/ (- (xx2 $x1) (xx1 $x1)) (size $x1))))));

(long $x1)  (value $x1) (value $x2));

(same_x12 $x1 $x2)  (value $x1) (value $x2))
			   (fuzzy (0.0 0.0 k1 (+ k1 (/ k1 5.0)))
				  (abs (- (xx1 $x1) (xx2 $x2)))));

(same_x2 $x1 $x2)  (value $x1) (value $x2))
			  (fuzzy (0.0 0.0 k1 (+ k1 (/ k1 5.0)))
				 (abs (- (xx2 $x1) (xx2 $x2)))));

(same_x1 $x1 $x2)  (value $x1) (value $x2))
			  (fuzzy (0.0 0.0 k1 (+ k1 (/ k1 5.0)))
				 (abs (- (xx1 $x1) (xx1 $x2)))));

;---------------------------------------------------
; Constraints on K's values

(constraints follow (k1 (default (1.0))
			(min 0.0) (max 3.0)(step 0.25)))

(constraints connected (k1 (default (1.0))
			   (min 0.0) (max 3.0)(step 0.1)))

(constraints adj (k1  (default (1.0)) (min 0.0) (max 3.0)(step 0.1)))

(constraints angle 
  (k1 (default (0.0))(min -3.2) (max 3.1)(step 0.5))
  (k2 (default (0.4)) (min 0.0) (max 3.0)(step 0.35)))

(constraints orient
  (k1 (default (0.5)) (min -3.2) (max 3.1)(step 0.5))
  (k2 (default (0.4)) (min 0.0) (max 3.0)(step 0.35)))

(constraints long
  (k1 (default (0.0)) (min 0.0) (max 0.8)(step 0.08))
  (k2 (default (0.1)) (min 0.1) (max 0.8)(step 0.1)))

(constraints same_x12 (k1 (default (1.0)) (min 0.0) (max 3.0)
			  (step 0.5)))

(constraints same_x2 (k1 (default (1.0))(min 0.0) (max 3.0)(step 0.5)))

(constraints same_x1 (k1 (default (1.0))(min 0.0) (max 3.0)(step 0.5)))

 