 UCI Software Architecture Research - Legacy Projects<body>
           
           
         
               Software Architecture      Software Architecture Overview            •    Extensibility     •    Environments     •    Architectural Styles     •    Real Systems         Software Architecture Research            •    Architecture-based Design     •    Architecture Description Languages                    •  Product Line Architectures                    •  Architecture-based Security &amp; Trust     •    Architectural Styles                    •  Internet Scale Architectures                    •  Decentralized Architectures     •    Self-Adaptive, Healing Architectures     •          Architecture to Implementation               Projects            •    Apigen     •    ArchEvol     •    ArchStudio 4     •    EASEL     •    PACE     •    xADL 2.0     •     Legacy Projects          People            •    Richard N. Taylor     •    David F. Redmiles     •    Andr� van der Hoek         Publications          Institute for Software Research   University of California, Irvine      Irvine, CA 92697-3455, USA  arch@ics.uci.edu    
         
         
           
          
             Legacy Projects 
          


   
     This page details legacy software projects that have been developed at UCI.  For our current projects, please see our current  software  page.  
   

     ArchShell 
   
      [LEGACY]  ArchShell is a command line tool which will allow you to build architectures and add tools on the fly. It shows how architectures can respond dynamically to changes in the system. Here are some instructions on how to run this tool using this  example . 
      ArchShell (requires  Java class framework for C2 )   
      

     ArchStudio 2.0 
   
      [LEGACY]  ArchStudio 2.0 is the previous demo version of an integrated architectural design environment. ArchStudio 2.0 pioneered the integration of architectural tools in a single design environment and also the use of XML to store and maintain architectural information in the form of a dtd based ADL called xADL 1.0. 
   

     ArchStudio 2.0 Demo 
   
      [LEGACY]  ArchStudio2.0 software download, leads to the software for the ArchStudio 2.0 architectural design environment demo. The purpose of this demo was to integrate a number of different tools we developed for C2 in a Architecture based IDE simulation. This shows how a C2 system may dynamically alter its architecture quick on the fly and how these changes to a running system are incorporated in the C2 style. 
     This demo includes the XML based shared ADL which is itself a general ADL with C2 attachments. This means that any architectural system could adopt the ADL � it is designed to be general and not C2 specific. 
   

     Argo 
   
      [LEGACY]  Other work initiated at UCI on Software Architecture has included the Argo Design Environment, a graphical design environment for constructing, analyzing, and generating UML designs or C2 architectures. This project lead to investigations related to the efficaciousness of UML as a practical starting point for architecture description. 
   

     ArgoUML 
   
      [LEGACY]   ArgoUML  is a graphical design environment for constructing, analyzing, and generating  UML  diagrams. It was originally developed at UCI, but is now externally maintained. Argo's  Graph Editing Framework  
   

     c2.fw 
   
      [LEGACY]  c2.fw is the latest  Java  framework for implementing  C2  components.  It is currently only available in the the  ArchStudio 3.0  release. 
   

   DASADA Project 
   
      [LEGACY]   DASADA  - Dynamic Assembly for Systems Adaptability, Dependability, and Assurance 
   

     Simple Stack Application with the C2 Class Frameworks 
   
      [LEGACY]  The C2 style focuses on the conceptual architecture of a system, independently of a particular implementation architecture. UCI's Java and C++ class frameworks for C2 concepts, such as components, connectors, and messages, provide development support for implementing C2 architectures in Java and C++. Components, connectors, and messages are explicitly represented as objects. Components may have their own memory space and thread(s) of control, or may share with other components. Components may run on different machines in a network. Architectures may be dynamically reconfigured. 
      Graphical Stack Application demo written using the Java C2 class framework 
        Java class framework for C2  ( documentation ) 
        C++ class framework for C2  
      

     KLAX 
   
      [LEGACY]  KLAX is a remake of an  old Atari video game  written in  C2 . It is included in  ArchStudio 3.0 . A regular version of KLAX and a spelling version of KLAX is available. 
           
        Screenshot    
             
        Architecture    
             
        Implementation    
             
        To-Do    
         
  
     M�nage 
   
      [LEGACY]   M�nage  is a  Java -based environment for managing evolving product line architectures.  It includes diagram editing facilities that are compatible with  xADL 2.0  architecture descriptions. 
   

     Visio for C2/xADL 
   
      [LEGACY]   Visio for C2/xADL  is a plugin to  Microsoft Visio  that allows editing of  C2  diagrams in Visio and tight integration with  ArchStudio . It requires  ArchStudio 3.0 . 
   
  
             
         
         
            
            This material is based upon work sponsored by a variety of agencies and sources, including the National Science Foundation under Grant No.s  0205724, 0430066, 0438996, and 0524033, the Boeing Company, and, previously, the Air Force Materiel Command, Rome Laboratory, and the Defense Advanced Research Projects Agency under Contract Number F30602-94-C-0218. The content of the information does not necessarily reflect the position or the policy of the Government or any sponsor and no official endorsement should be inferred.  Any opinions, findings, and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the National Science Foundation.
           
         
        </body> 