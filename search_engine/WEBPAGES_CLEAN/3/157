 Modeling uncertainty in software processes 
                  Next:   Final Thoughts 
 Up:   Future Work 
  Previous:   Other uncertainty modeling techniques 
  
   Modeling uncertainty in software processes  
 
In this dissertation, we focused on software product
uncertainties, such as modeled for CEquencer software,
though process uncertainties were treated briefly
(e.g., path selection criteria in TableÂ    ).
Despite the emphasis on artifact uncertainties, we firmly
believe that process uncertainties should also be modeled.
We contend
that software-process modeling formalisms must be augmented
to include uncertainty values; that an environment for
supporting definition and execution of process models should
include capabilities for representation and interpretation of
belief values and should allow for Bayesian updating of those
values; and that Bayesian updating procedures must be carried
out during process execution, such that belief values and
confidence levels are continuously updated as new evidence arrives.
  
The provision and update of belief values may be greatly enhanced
in software process frameworks that include process measurement
capabilities.  Such capabilities constitute a rich source of
information regarding the current state of various elements and
support the collection of statistical and empirical data that
may significantly improve the accuracy of prior belief value estimation.
  
We expect that by modeling software process uncertainties,
one may achieve a more realistic representation of the process,
enable automated belief revision by means of Bayesian updating,
and support prediction and guidance of future development activities.
  
      
 Hadar Ziv  
Fri Jun 20 16:25:19 PDT 1997 
 
</body> 