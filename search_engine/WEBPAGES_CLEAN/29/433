 ICS 31 Placement Exam<body>
 
  ICS 31 • 
UC Irvine 
 
  Placing out of ICS 31 by Exam   
  If you come to UCI with some college-level programming experience (including AP CS A) but without a background in the Python language, you have the opportunity to skip ICS 31 and start with ICS 32: You just need to learn the Python from ICS 31 on your own (resources are available) and take and pass the ICS 31 Placement Exam. 
  Should you consider this?</strong> There's no risk; taking the exam doesn't obligate you to anything. If you haven't done the equivalent of at least one introductory programming class (in school or by self-study), this path probably isn't for you. But if you have, then taking and passing the placement exam provides these advantages: 
  You don't have to sit through learning what a for-loop is again. ICS 31 is a course with no prerequisites; it starts from the beginning (though it moves at a college-level pace). 
   You're paying for this, or someone is; you should get your money's worth. You're not getting full value if you're sitting in a course where you already know the material. 
   You can get a quarter's head start by passing the exam and placing into ICS 32 in the fall. This gives you more flexibility and may open up other opportunities sooner. Do a few other things like this and you might have room to study abroad or to graduate early. 
   Lab work in ICS 31 uses  pair programming , where two students work together using one computer. When one student has a question, the partner can often answer it and work can progress without waiting for external help. In evenly matched partnerships, the balance of asking and answering is pretty even. Where one student is more experienced, that student ends up doing most of the explaining. Both students still learn from that, and experienced students can try to partner with other experienced students. But if you'd like to work more often with students around your level and that level is eligible for ICS 32, then ICS 32 is the course you should take. 
   ICS 32 in the fall is smaller than ICS 31 in the fall and ICS 32 in the winter. That can be an advantage. 
   Exam format: </strong>The ICS 31 Placement Exam is a two-hour, pencil-and-paper, multiple-choice, machine-scored exam. You will need a pencil and a Scantron form F-288, available at the UCI bookstore and Zot'n'Go stores on campus. You may bring with you to the exam any printed materials you like: textbooks, notes, code, printed web pages. You may not use any electronics, including cellphones and smart watches. [If you're not used to open-materials exams, be careful: We expect that you know programming and Python before taking the exam. There will be time to look up the occasional detail; there will not be time to look something up for every question and the questions will mostly ask you to apply your knowledge rather than to recite some fact that can be looked up.] 
 Your score on the exam will translate to a letter grade. You have the choice whether to take that letter grade as your grade for ICS 31 (and go right on to ICS 32), or to discard the grade and enroll in ICS 31 for real. 
  Logistical details:</strong> It's best (but not absolutely required) that you take the ICS 31 Placement Exam before your SPOP session. Of course that will depend on when your SPOP session is and how long it takes you to learn. Here are the steps: 
  Stop by the ICS Student Affairs Office (SAO) and have them sign a Credit By Examination form. 
   Make an appointment with the  UCI Testing Center  to take the test. If possible, schedule it before your SPOP session. They can make testing appointments at many times during the week 
   The SAO will let you know what grade you earned on the exam and whether you are eligible to enroll in ICS 32. 
   You let the SAO know if you wish to accept the exam grade for ICS 31 and enroll in ICS 32. 
   Prerequisite programming concepts:</strong> From your previous experience or course work, we expect you will be familiar with these programming concepts in some modern programming language: Data types and structures (integers, floating point or real numbers, character strings, booleans, arrays or lists) and basic operations on them (arithmetic, comparisons, assignment, logical operators [and, or, not], indexing and traversing an array or list); basic control structures and patterns (sequence, selection (if/else), repetition/looping (for, while), nesting); function or procedure definition, calling and return, parameter passing; text input and output. 
  Python knowledge:</strong> We expect you to be familiar with most of the Python 3 concepts covered in ICS 31. Here is a summary of those concepts: 
  Basic Python 3 programming as covered in chapters 1–6 of  Introduction to Computing Using Python, An Application Development Focus,  second edition, by Ljubomir Perkovic (Wiley 2015). 
   Namedtuples in the collections library (in the standard Python 3 distribution). See the  Namedtuples in ICS 31  document and the official documentation on  python.org . 
   Type annotations in function headers, docstring comments, and the assert statement. These features and their role in software development are described in the  Design Recipe  document. 
   The  Restaurants Program , a short case study that illustrates how these features are used and may be the basis of questions on the placement exam. (If we ask detailed questions about this code on the exam, we will supply a copy of the code with the exam.)   
   A  detailed listing  of Python language features covered in ICS 31 is available. 
    
</body> 