 Python: module priorityqueue<body>

           priorityqueue</strong>       index   c:\users\pattis\workspace\courselib\priorityqueue.py       
 
         Classes</strong>                  
     builtins.object 
   
    PriorityQueue 
    
  
        class  PriorityQueue</strong> ( builtins.object )           
  Implements a Priority Queue data type: values are removed 
  according to the highest priority value first rule.         
 Methods defined here:     __add__</strong> (self, x)   Overload syntax: pq = pq + x is the same as pq. add (x)       __bool__</strong> (self)   Determine the truth of a priority queue: non-empty priority queues are True       __init__</strong> (self, inital_contents =[] , key =&lt;function &lt;lambda&gt;&gt; , reverse =False )   Priority queue is constructed to store initial_contents (it can be any iterable), 
  with key/reverse used for computing relative priorities (as in sorting).       __iter__</strong> (self)   Implement the constructor for the iterator protocol       __next__</strong> (self)   Implement next for the iterator protocol       __str__</strong> (self)   Return a string representation of a priority queue       add</strong> (self, v)   Add value v to the priority queue       clear</strong> (self)   Clear the priority queue       is_empty</strong> (self)   Return whether the priority queue is empty       merge</strong> (self, other)   Merge other (a  PriorityQueue ) with this one (clearing otherPriorityQueue)       peek</strong> (self)   Return (but do not remove) the highest priority value in the priority queue       remove</strong> (self)   Remove and return the highest priority value (by key/reverse) in the priority queue       size</strong> (self)   Return the number of values in the priority queue    
Data descriptors defined here:    __dict__</strong> 
  dictionary for instance variables (if defined)  
    __weakref__</strong> 
  list of weak references to the object (if defined)  
       </body> 