 CHEM.datatype.compress.IntegerCodec<body>

       Home     

  
           Trees     

  
           Indices     

  
           Help     

        
       
       
         Package CHEM  ::
         Package datatype  ::
         Module compress  ::
        Class IntegerCodec
       
     
     
          [ hide private ]      [ frames ] |  no frames ]     
     Class IntegerCodec    
 Codec  --+
        |
        IntegerCodec</strong>
 

  

OPTIONS:
  bits = DEFAULT=32 bitwidth (not including sign)
  sign = DEFAULT=FALSE, signed our unsigned
  truncate = DEFAULT=True, throw exceptions or set out of range data to MaxInt or MinInt?

FORMAT:
  1-bit for sign (optional) = +/- --&gt; 1/0
  $bits$-bits of Integer  

     
   
        Instance Methods  
          [ hide private ]  
         
   
         
      
           __init__ ( self ,
         bits = 32 ,
         sign = False ,
         truncate = True )  
           
            
            
           
           
     
         
      
           encodeL ( self ,
         data )  
           
            
            
           
           
     
         
      
           decodeI ( self ,
         iter )  
           
            
            
           
           
     
      Inherited from   Codec   :
        __call__  ,
        decode  ,
        finger  
       
     
      
   
        Method Details  
          [ hide private ]  
         
    
 
   
     
     __init__ ( self ,
         bits = 32 ,
         sign = False ,
         truncate = True ) 
      (Constructor) 
   
     
     
     
 &gt;&gt;&gt;  C=IntegerCodec()
 &gt;&gt;&gt;   for  x  in  xrange(0,10):
 ...     if  x!=C.decode(C(x)):  print  x, C.decode(C(x)), C(x)
 &gt;&gt;&gt;  C=IntegerCodec(sign=True)
 &gt;&gt;&gt;   for  x  in  xrange(-10,10):
 ...     if  x!=C.decode(C(x)):  print  x, C.decode(C(x)), C(x)
 &gt;&gt;&gt;  C=IntegerCodec(bits=3)
 &gt;&gt;&gt;  C.decode(iter(C(123123)))==7
 1 
   &gt;&gt;&gt;  C.decode(C(-1))==0
 1 
   &gt;&gt;&gt;  C=IntegerCodec(bits=3,truncate=False)
 &gt;&gt;&gt;  C.decode(iter(C(123123)))==7
 Traceback (most recent call last): 
   ... 
 ValueError: data out of range 
   &gt;&gt;&gt;  
    Overrides:
       Codec.__init__ 
     
       
  
 
   
     
     encodeL ( self ,
         data ) 
   
     
     
      Overrides:
       Codec.encodeL 
     
       
  
 
   
     
     decodeI ( self ,
         iter ) 
   
     
     
      Overrides:
       Codec.decodeI 
     
       
        Home     

  
           Trees     

  
           Indices     

  
           Help     

        
       
    Generated by Epydoc 3.0beta1 on Thu Nov  8 17:49:33 2007
     
     
       http://epydoc.sourceforge.net 
     
    </body> 