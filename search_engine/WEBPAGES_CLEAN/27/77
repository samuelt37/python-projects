  ICS 125 Syllabus<body>
 
  
Information and Computer Science 125:   Project in Software System Design
 

Fall Quarter, 1999  
Lecture: TTh 9:30 - 10:50  
Location:   CS 180    
(Need directions to campus? See   the maps directory.    
Course code:    36165    
Discussion Section (REQUIRED): MWF: 12:00 - 12:50  
Location:   CS 180    
Course code:    36168     

   
 Instructor  |
 Overview and FAQ  |
 Textbooks  |
 Teams  |
 Assignments  |
 Costs and Benefits  |
 TA  |
 Keeping in Touch  |
 Computing  |
 Academic Dishonesty  |
 Schedule  
  


  (Last modified Thu Nov 18 1999)      What's New  
 Watch this spot for new information regarding ICS 125. It may link to
other web pages or to updates to this page. 

   [November 29] The 
 
final appraisal form   is now available.  Please note that this 
is *confidential* and is *not* done on a team basis.  This is the form earlier
described in class and at   below.    Instructions on 
submittal are included in the form.
   [November 18] The presentation on
 
giving demonstrations   is available on the course website.
   [November 18] I've changed the implementation assignment slightly.  Look under
the presentation instructions and under the description of the size of the implementation.
   [November 18] The article on 
 
boothmanship   is available on the course website.
   [November 10] The implementation assignment is now available.  So is the final assignment.
Note that I have provided a skimpy description of it.  I'm trusting you to fill in the necessary
and obvious details.
   [November 10] The schedule page has been slightly revised.  
   [October 13] Pointers to all the teams' websites, their customers, and their office locations
have been added.  Check out the
 Teams  table.  (And note that a couple of the teams have names and eye candy
already!)
   [October 13] The document that Tamara Wolfe provided regarding the PSYO website
project is available in both 
 
Word   
and 
 
.pdf formats.  
   [October 7] The 
 
slides on project management   
that I showed today are available.  The PDF file also has some excellent material on 
project plans that I didn't talk about today, but probably will on Tuesday.  In any event
you should find this material useful as you create your project plans.
   [September 24] The class TA has been assigned:  Jie Ren.  Contact info below.
   [September 22] On the first day of class (September 28th) you will need to turn in a copy
of the   initial class survey  .  You can print out the survey from the
website, fill in the form, initial at the bottom, and bring it to the class.  Otherwise you'll have
to take time at the end of the class to fill it in then.  In any event you must turn the survey in
on the 28th.
   [September 22] The web site now has the first three assignments available: the prospectus,
the requirements, and the design.  The remaining two will be available later.
   [September 17] Web site opened.
     Course Staff  
  Instructor  
  
   Professor  
Richard N. Taylor  
	   Electronic Mail: 
	  taylor@uci.edu   
	   Office:  
	ICS2-203   
	   Office Phone: (949) 824-6429 
	   Hours:  Tuesday and Thursday, 11:00 - 12:20
	Please make appointments by email, however, in
	order to guarantee the meeting. 
	     Fax: (949) 824-1715
   Mailing Address:  
	 
	  
	Department of Information and Computer Science ,     University of California, Irvine    
	Irvine, California 92697-3425
	 
    
  Teaching Assistant(s)  
     Jie Ren       
Send mail to:      
       jie@ics.uci.edu       
     
  Overview, Prerequisites, and Frequently Asked Questions  

 
UCI Catalog Description: 

 
Specification, design, construction, testing, and documentation of a
complete software system using concepts learned in ICS 52, 121, and
141.  Special emphasis on the need for and use of teamwork, careful
planning, and other techniques for working with large systems.  
 

 This course will emphasize techniques and notations essential to creating
software systems based on the principles discussed in ICS 121: well-understood
requirements, usability and user interface design, architectural design
and module specification, well-planned testing, effective oral and written
communication of concepts, proper programming style, group coordination,
product documentation and software process.

  All students are expected to attend all lecture and discussion sections.
In general, there will not be much lecturing in the class. Instead, class
time will be highly interactive, and all students are expected to participate.
About half of the time will be spent performing reviews of the artifacts
developed. These reviews will take up all lecture and discussion periods
the week following the due date for each deliverable.

  
Prerequisites:   ICS 51 with a grade of C or better;  ICS 121 and 141;
Mathematics 2A-B-C.  

   Is the Discussion Section required?  

 
Yes!  The discussion section is essential for two reasons:
     You will need to meet with your teammates REGULARLY.  The best correlation with failure
that I've seen in this class over the past decade has been teams which were unable or unwilling
to establish a regular meeting schedule and to keep to it.  In other words, EVERYONE needs to be 
in attendance at team meetings.  The discussion section time period is the guaranteed time period
for you team to meet.
 
 
Since this is a large class, and since each team will be making at least 4 presentations during
the quarter, we'll have to use some of the discussion sections for those presentations.
 
    What will the projects be?  

 
Candidate projects can come from many places:  in AY 98-99 some ICS 125
teams worked on projects that sponsoring local companies suggested.
Other teams worked on projects related to on-going research programs in
the ICS department.  Other projects may come from the students.

  
Choice of projects is related to many goals.

  
One key goal is to pick a project of appropriate size.  It must be big
enough to challenge a team of four students, but not so big as to
commandeer everyone's life!  As a result we will spend some time at the
beginning of the fall attempting to size various projects.  These
planning estimates will be revisited as the course progresses.

  
Another goal is to select a different project for each team.   Since
each team will be making regular project presentations to the rest of
the class, diversity of projects will enable students to learn from
experiences across a range of project topics.

  
Still another goal is to work on something fun and interesting!  I've
had students working on flight simulators, generating HTML pages,
linking MPEG movie frames via hypertext to other artifacts, and
building graphical program editors.  There are many opportunities....

    How will teams be composed?  

Each team will have 4 or 5 people.  I will attempt to balance a team's
aggregate expertise with the project they've decided to work on.  I
will also attempt to accommodate personal preferences for teammates.
The course survey form, which you will complete the first day of class, is
a key instrument in assigning the teams.


  What's the Drop/Add policy? 

 
Since ICS 125 has a strong team project orientation, it is essential
that the drop/add process be terminated early.  Therefore   NO drops
or adds   of ICS 125 will be permitted after the end of the SECOND
week of class.

    Lecture Topics  

 
ICS 125 is on a tight time schedule, thus there is not much time for review.
You are expected to recall the material covered in ICS 121 and the other
prerequisite courses.
Short supplementary lectures are anticipated on:
	    Teamwork and team organizations
	   Project management
	   Project cost and schedule estimation
	   Usability evaluation and user interface prototyping
	   Software architectural choice
	   Configuration management and version control
	   Distributed software engineering
	   Engineering of distributed applications, including distributed object technology
	  
Specific choice of lecture topics will depend somewhat on the projects
chosen by the teams.  If several of the projects, for example, are
concerned with Internet applications, then lectures on protocols and
Web technologies will be included.  Similarly if most projects will be
using some particular kind of infrastructure, such as CORBA or ActiveX,
then there will be lectures on that.

   
  Textbooks  

 
Regardless of the project chosen, all students will be required to read
  The Mythical Man-Month .  Depending on the projects chosen additional
readings from various sources may be required.

    REQUIRED:

  
Author:              Fred Brooks
  
Title:               The Mythical Man-Month, Anniversary Edition
  
New Price:$          24.50 
  
Used Price:$         18.40 
  
also available from  amazon.com  for $24.95. 
 
Note that this book has a lot of white space and blank pages, so it 
really will not take you long to read these chapters.
    
BACKGROUND/GENERAL REFERENCES: 

  
Stephen Schach.  Classical and Object-Oriented Software Engineering 
(Third Edition). Irwin, Chicago IL, 1996. 

 or  Classical and Object-Oriented Software Engineering with UML and
C++ 
  or Classical and Object-Oriented Software Engineering with UML and
Java 
 
Ghezzi, Jazayeri, &amp; Mandrioli.  Fundamentals of Software Engineering .
Prentice Hall, Englewood Cliffs NJ, 1991. 

 
Rumbaugh, et.al.  Object-Oriented Modeling and Design.  

 
Mary Shaw and David Garlan.  Software Architecture, Perspectives on an
Emerging Discipline.  Prentice Hall, Englewood Cliffs NJ, 1996. 
  
All are available from   amazon.com .     
  Assignments and Assessment  
 
The project is the focus of this course and will be assessed
accordingly.  It will account for 80% of your grade; this is broken
down between deliverables, a team Web page, and presentations.  The
remaining 20% will be divided among individual course logs, teamwork,
individual leadership demonstrated, and the final.

  
Deliverables 
The ICS 125 project nominally consists of five major assignments. Their
relative weighting (as a percentage of your final grade) of each deliverable
is indicated in the table below along with the due date. The on-line versions
of the assignments may still be under construction (watch the what's new
section to see when they are available).
  
  
     Deliverable  
  Weight   
  Description  
  Due Date  
   Individual Web Page 
 . 
 . 
 04 October 
   
 Teams Designated  
 . 
 . 
 05 October 
   
 Projects Selected/Assigned  
 . 
 . 
 07 October 
   Team Web Page 
 . 
 . 
 11 October 
   Prospectus and Plan  
 
 10  
 
  Prospectus   
 15 October 
   
 Prospectus Reviews  
 . 
 week 4 
 18-22 October 
   Requirements Specification 
 
 15  
 
  Requirements   
 22 October 
   
 Requirements Reviews  
 . 
 week 5 
 25-29 October 
   Architecture/Module Specifications  
 
 20  
 
  Architecture/Design   
 05 November 
   
 Design Reviews  
 . 
 week 7 
 8-12 November 
   Implementation  
 
 20  
 
  Implementation  
 19 November 
   
 Code Reviews  
 . 
 week 9 
 22-24 November 
   Testing/Test Documentation 
 
 15  
 
  Integration/Testing  
 03 December 
   
 Demonstrations  
 . 
 week 10 
 29 November - 03 December 
   

 
The deliverables are weighted according to the relative amount of time
and effort we expect you will spend on each (and not necessarily on their
importance with respect to software development). Variations to this may
be made to accommodate the particular needs of a given project or a given
team. Also, note that the grade for a deliverable will consist not only
of the document/specification, developed during that phase but also
the test plan developed along side it as well as the review conducted in
class the following week.

  
Deliverable Due Dates 
 
Deliverables are due at 12:50 PM on the date indicated in the table above.
NO LATE ASSIGNMENTS WILL BE ACCEPTED.
This applies to your final system and all intermediate projects.
Since you are working in this class
as part of team, it is the team's responsibility to ensure that assignments
are turned in on time.  Normal excuses for late assignments, such as
illness, do not apply in a team setting (unless of course everyone on the
team is ill  :-)

  
Unless directed otherwise, deliverables must be turned in directly to the
TA or placed in the TA's mailbox before that time. 

  
Deliverable Reviews 
Each deliverable will be reviewed in class. Each team will be given 15-20
minutes to present their project.  You will be given guidance in class on
how to conduct these presentations.

 
Your customer should be invited to your team's Prospectus and Requirements review
as well as your demonstration (and, possibly even your design and code
reviews depending on the nature of your customer).  The review is
your team's chance to inform as well as obtain feedback and ideas from
all relevant parties; your document will be reviewed at this time by course
staff and clients as well as the rest of the class.  This review is
a formality, however, and each team should have presented and negotiated
both relevant documents to the customer prior to the review (if you haven't,
it may be unpleasantly obvious by the interactions at this time).

   Document Requirements 
 
All the documents associated with the above listed phases are integral
parts of systematic software development.  Their continued, up-to-date
existence is necessary for successful system development.
 Do not delete  documents after they have been turned in.  They must
reside permanently on your team's website.

  
All deliverable documents must be prepared on-line and be available as part
of your project home page either as either HTML or .pdf files.  NO MS Word files.
In general, the following should be observed.
   Cover "page".
   Every deliverable shall have identifying information giving
     Project title
     Development phase and deliverable
     Date
     Team name/number
     Team members
     Phase manager
     Phase clerical person
     Files and locations (href's)
 
    
   Table of Contents.
   Every deliverable shall include a table of contents
  Specification.
   The system specification (requirements, design,
module specs, code) for each deliverable shall correspond in form and
content to the outline provided for that phase.
Sections that are not necessary for this application shall be marked
``N/A''.
  Minutes.
   Every deliverable shall be accompanied by minutes of
team meetings held during the associated period of time.


  Performance Appraisals.
   Every deliverable shall be accompanied
by performance appraisals.  Performance appraisals shall NOT be maintained
as part of the project's web page.  A form is available at
  
http://www.ics.uci.edu/~taylor/ics125_fq99/performance_appraisal.pdf
 .  A 
  
.ps file   is also available.

  Project WebPage.
   The project deliverables, except for the performance appraisals,  shall be maintained
in a project homepage.  
   ``Fixed up'' Deliverables 
 
For all deliverables, except for the last, you will also have the opportunity
to ``fix it'' based on its evaluation.  You may hand in an improved
version of a deliverable one week after that deliverable has been
graded and receive up to 50% of the points deducted on the initial
version.  The purpose of this exercise is for you to both learn how to
use the techniques and so that you do not implement something from a
bad design or specification.  You should keep the
same responsibilities for the improvement phase but assign new
responsibilities for the next phase.


   Course Log 
 
During your career you will need to keep track of how you spend your time
either for you employer or to improve your own productivity.
Throughout this course, you will practice doing this by keeping a
course log recording the time you spend on all activities related to
this course.  At the beginning of each week you must email the previous week's log to the TA.
A sheet showing what should be on the log is available at:  
http://www.ics.uci.edu/~taylor/ics125_fq99/logform.html  .
  
Keep a copy of your logs:  you will need them at the end of the quarter for the final
review.  

  
Each entry records the date and amount of time spent, type of entry,
and text describing the entry.  An entry is one of three types:
    A  description  records an activity;
   An  explanation  says why something happened;
   A  prescription  is a plan for something to do later.
   
Most entries will be of the first type, but occasionally you should
reflect and think about what is going on.
The time entry applies for descriptions of activities and records the
amount of time spent in hours, to the nearest quarter hour.

  
You will be marked down only for failing to email logs each week,
giving too little detail, or failing to keep track of time spent.  

  
You are especially encouraged to keep track of the kinds of errors
you make and the amount of time they consume.  The purpose of recording
these errors is so that you develop a better understanding of the
kinds of mistakes you typically make.  With that understanding you
can improve your performance in the future, by paying extra attention
to those areas in which you've had problems in the past.

   
  Team Composition, Activities,  and Peer Apportionment of Credit 
 
As discussed in class, teams will be assigned on as fair a basis as
possible for the project.  The danger most students perceive in
working on projects with other students is in being saddled with (what
they think is) a "non-producer".  This is particularly true when
you don't get to choose all your teammates (the situation here).  Many
factors dictate the use of a multi-person project for this course.
You will not, after all, be able to choose your workmates in the
future.  Therefore, to alleviate your concerns and to grade you
appropriately, at the end of the term project you will be asked to
divide 100 points among the members of your project team,
corresponding to how you believe they contributed to the project as a
whole (or on a phase-by-phase basis if you wish).  In addition, each
team member will be appraised for each phase.  This ``peer
apportionment of credit'' will be used to help determine appropriate
individual grades for the project component.

   Team Organization 
 
There are several obvious dangers to group work that can be circumvented.
Ensure that there is adequate coordination among the team members.
Know each other's login names for electronic mail.
Know each other's phone numbers.
Meet  at least twice per week  (outside of class lecture)
at the same, pre-determined time each week (so as to avoid confusion).  The Discussion Section
is designed to guarantee that such meetings are possible for everyone.  You are strongly
urged to use that time slot.

  
Have a contingency plan for submitting a document on time even if
the responsible manager becomes unavailable.

  
You are  strongly  advised to consult weekly with the instructor/TA
about your progress, problems, questions, etc.

   Meetings 
 
Meetings are an important part of a team project.
A successful meeting requires that the meeting have a definite
purpose and associated agenda (these are the responsibility of the
phase manager) and that all decisions be recorded in minutes
(the responsibility of the phase clerical person).
  
The purpose of minutes is to record decisions made
and to be available for updating any team member who misses a meeting.
Each deliverable must be accompanied by agendas and minutes
for the team meetings held during the associated period of time.
I.e., keep the agenda, and the minutes, on-line as part of your project web page.
The minutes should outline
    agenda for the meeting
   team members present and reason for any member's absence
   major design decisions discussed
   task assignments made
   future meetings scheduled
      
  Cost and Benefits 

 
This course will demand a lot, but I think that you may well find this
to be the most rewarding courses that you will take in your
undergraduate career.  ICS Alumni have said repeatedly that ICS 125 was
  the most important   class that they took at UCI.  The
techniques presented in class actually work and will help you in future
software development.    

  
At the end of the class I encourge you to make copies of your
project website/notebook for each team member.  Take them with you when
you go to a job interview.  Students from past ICS 125 classes
have frequently said that it was their project notebook that 
clinched a job for them.  Some interviewers have commented that 
the quality of the process followed by the ICS 125 teams and the
quality of the product exceeds those of the production engineers
in their companies.  

    
  Keeping in Touch  
Check the course syllabus page regularly .  
Announcements concerning assignments will be made there, changes to the lecture schedule will be announced there,
and so on.

   
  Teams and Meetings  
 
As noted earlier, teams will use (at least) the discussion sections for team meetings.

             
     Team Designator   Home page   Customer Contact </strong>    Office </strong> </strong> </strong>    Compaq
     Team Compaq      
     Roger Olds   
    CS Trailer Room 1      
    Posties-1
     Posties-1      
     Joe Feise   
    CS Trailer Room 2      
    Posties-2
     DAV Posties      
     Joe Feise   
    CS Trailer Room 2      
    PSYO-1
     Wild, Wild Web      
     Dick Taylor   and
  Tamara Wolfe   and
  Chris Russell  
    CS Trailer Room 3      
    PSYO-2
     One In a Million Industries      
     Dick Taylor   and
  Tamara Wolfe   and
  Chris Russell  
    CS Trailer Room 3      
    PSYO-3
     Team Mugen      
     Dick Taylor   and
  Tamara Wolfe   and
  Chris Russell  
    CS Trailer Room 5      
    IMPP-1
     The Zot Project      
     Rohit Khare   
    CS Trailer Room 8      
    IMPP-2
     HKPlayers      
     Rohit Khare   
    CS Trailer Room 8      
    Workflow-1
     Reservation Pro      
     Peter Kammer   
    CS Trailer Room 9      
    Workflow-2
     Workflo2      
     Peter Kammer   
    CS Trailer Room 9      
      
  Computing  

To facilitate sharing of files among team members, each team will have
an account on a Unix (Sun Solaris 2) machine, where the team web site
and project documents must be maintained.

 The primary computing facilities will be the  ICS Labs , which provide Sun
Solaris and Windows/NT machines.  The  hardware
environment  and  software
environment  is posted on the lab's web site as well as the  lab hours  and
availability for Fall 1999.

  The system specification for each deliverable may be done on Suns, Macintoshes,
PCs, or any other available platform. Choice of computing platform for
implementation will depend on the projects chosen. Where possible and reasonable,
Java will be the implementation language used. (Scads of Java information
is available on-line, including a  tutorial,
  reference
material
 and many, many packages, such as those available from  Gamelan .)

  
Choice of computing platforms will depend on the projects chosen.  Where
possible and reasonable Java will be the implementation language used.

    
 
Policies (Academic Honesty and Computing Use) 
Cheating in ICS 125 will be dealt with in accordance with  ICS
cheating policy , which is in keeping with the  UCI
academic [dis]honesty policy .  Please familiarize yourself with
these documents, as you are held accountable to them.
 You are also bound by all policies posted at  I
CS's
Computing Support Policies , including  ICS's
Ethical Use of Computing Policy,  as well as  UCI's
Computer Use Policy .


    
  Department of Information and Computer 
Science , 
 University of California, Irvine CA 92697-3425
 
</body> 