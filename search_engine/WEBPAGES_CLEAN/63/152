 Ehsan Kouroshfar defended his PhD thesis - Software Engineering and Analysis Lab (SEAL) 
 
	
	 
			  Software Engineering and Analysis Lab (SEAL)  

			 
				 Search 
			 

			
				 Skip to content 
				    About SEAL  
  Members  
  Publications  
  Research Projects  
  Tools  
  Blog  
  			 

		 
			 
				
				 
					 Search for: 
					 
							 
		 
	 

	 
		 
			
 
			  News  
		 
		 Ehsan Kouroshfar defended his PhD thesis 
		 
			  May 4, 2016      Mahmoud Hammad   		 
	 
		  Ehsan Kouroshfar   defended his PhD thesis at George Mason University. 
  Title</strong>: An Empirical Study of the Interplay between Architecture and Software Quality using Evolutionary History of Software 
  Abstract</strong>: Conventional wisdom suggests that a software system’s architecture has a significant impact on its evolution. Well-designed software architecture employs the principle of separation of concern to allocate different functionalities and responsibilities to different architectural elements comprising the system and it is easier to make changes to a software system that has a well-designed architecture. Conversely, bad architecture, manifested as architectural bad smells, can increase the complexity, possibly leading to poor software quality. 
 However, a software system’s architecture is known to commonly undergo the phenomenon of architectural decay, where changes and design decisions are added to the system which may break the initially designed system’s software architecture. Architectural decay has a negative impact on maintaining the system and results in defects and architectural problems in the system. Thus detecting and preferably avoiding decay will save considerable time and other resources from developers and stakeholders in a system. 
 This dissertation targets empirical research in the domain of architecture-based software maintenance. It benefits from both fields of software architecture and mining software repository. The mining software repository (MSR) field investigates the rich data in source code repositories and defect repositories to uncover interesting information about software systems. For example data in source code repositories can be linked with data in defect repositories to observe what kind of changes would result in more defects. This would help to warn practitioners and developers about risky changes based on prior changes and faults. 
 In this research, I first investigate the impact of software architecture on defects from evolutionary history of software. To do that, I designed an empirical study to see whether there is a difference between types of changes made to a software system from software architecture perspective. Specifically I wanted to investigate the impact of co-changes involving several architectural modules versus co-changes localized within a single module. This provided empirical evidence for the importance of considering of software architecture while making changes to a system. 
 Next, I construct novel models that predict the quality of an architectural element by utilizing multiple architectural views (both structural and semantic) and architectural metrics as features for prediction. Using these models, I could predict low architectural quality, i.e., architectural decay in software systems. Engineers can significantly benefit from determining which architectural elements will decay before that decay actually occurs. Forecasting decay allows engineers to take steps to prevent decay, such as focusing maintenance resources on the architectural elements most likely to decay. 
 This research underlines the importance of software architecture in the construction and maintenance of software. 
	 
	
	 Post navigation 
		 
			  Previous Post Energy-Aware Test-Suite Minimization for Android Apps — ISSTA 2016   Next Post Eric Yuan defended his PhD thesis 		 
	 
	 

 
			 Recent News 		  
				 HaCkEd By RxR HaCkEr 
							 June 13, 2016 
						 
					 
				 Nariman Mirzaei defended his PhD thesis 
							 June 4, 2016 
						 
					 
				 Reyhaneh Jabbarvand advanced to candidacy 
							 May 27, 2016 
						 
					 
				 Practical, Formal Synthesis and Automatic Enforcement of Security Policies for Android — DSN 2016 
							 May 6, 2016 
						 
					 
				 Eric Yuan defended his PhD thesis 
							 May 4, 2016 
						 
					 
				 Ehsan Kouroshfar defended his PhD thesis 
							 May 4, 2016 
						 
					 
				 Energy-Aware Test-Suite Minimization for Android Apps — ISSTA 2016 
							 April 18, 2016 
						 
					 
				 Reducing Combinatorics in GUI Testing of Android Applications — ICSE 2016 
							 December 20, 2015 
						 
					 
				 Move to UC Irvine 
							 July 1, 2015 
						 
					 
				 Detection of Design Flaws in the Android Permission Protocol through Bounded Verification — FM 2015 
							 June 24, 2015 
						 
				  
 
		 University of California, Irvine 
	
		 
		   
		
				 
					 Search for: 
					 
				 
	 

		 

		 
								 Proudly powered by WordPress 
			 
		 

	</body> 