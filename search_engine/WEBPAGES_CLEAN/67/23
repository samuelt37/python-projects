 Dr. Rina Dechter @ UCI<body>

[an error occurred while processing this directive]
    
      
   ICS-275A, Constraint Networks, Fall 2003 
      
     
    main  |
    homework  |
    readings  |  
    slides  
   
       
     
 
         
Project:   Either present paper(s) or choose a programming project.    Also, feel free to propose your own idea for a project.   

     Papers:  

 
 [1]  
Cover chapter 11 on tractable language in
 Constraint Processing .   

 
 [2]  
Cover chapter 13 in  Constraint Processing .   
 

 [3]   PDF  
E. Gelle and B. Faltings.  "Solving Mixed and Conditional Constraint
Satisfaction Problems" .  Constraints, Vol 8 Num 2, April 2003.   

 
 [4]   PS  
Bacchus et. al.  "DPLL with caching: a new algorithm for #SAT and Bayesian
inference" .     

 
 [5]   PS  
Larrosa et. al.  "Solving still-life problems" .     

 
 [6]   PS  
van Beek et. al.  "A fast and simple algorithm for bounds consistency
of  the alldifferent constraint" .  IJCAI2003, pp 245-250 .   

 
 [7]     
Chmeiss and Jegou and Keddar.  "On a generalization of triangulated graphs
for domain  decompositions of CSPs" .  IJCAI 2003, pp. 203-208.   

 
 [8]   PDF  
Jegou and Terrioux.  "Hybrid backtracking bounded by tree-decomposition
of constraint networks" .  AI Journal vol 146, no 1, 2003.   

 
 [9]     
Terrioux and Jegou.  "Bounded backtracking for the valued constraint
satisfaction problem" .  CP2003.   

 
 [10]   PS  |
 PDF   Rish, I., and
Dechter, R.,  "Resolution versus Search: Two Strategies for SAT"   In
"Journal of Automated Reasoning", special issue on SAT, Volume 24, Issue 1/2,
pp. 225-275, Januray, 2000.   

 
 [11]   PS   
Y. Zhang and R. Ypa,  "Consistency and set intersection" 
 In "IJCAI-2003", pp. 263-267.   






      
     Programming Project:    
          Experiment with REES:   
         
 1. Implement your own solver, plug it into REES and compare. 
          
 2. Implement a new structure-based  random network and compare existing
algorithms in REES.
          
 3. For the task of counting solutions, perform an experimental  analysis
using REES. 
          
 4. Develop a benchmark in a dmain of your choice using REES and run your
algorithms. 
           Specific ideas:   
         
 1. Implement backtracking with forward checking using generalized arc-consistency.
          
 2. Implement variants of SLS + cycle-cutset. 
          
 3. Compare PC look-ahead with recent heuristics developed by Kalev.
          
 4. Implement path-consisteny for look-ahead but record results  on domains
only. 
          

    
    
    
 School of Information and Computer Science 
 University of California, Irvine, CA 92697-3435 
 Dr. Rina Dechter 

 dechter at ics.uci.edu 

     </body> 