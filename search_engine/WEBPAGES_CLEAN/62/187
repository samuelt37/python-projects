 // Test of closest pair algorithms
// David Eppstein, UC Irvine, 19 Apr 1997
//
// Nearest neighbor closest pair algorithm

#include "Neighbors.h"
#include "Error.h"

// Subroutine to find nearest neighbor of a given point
void NeighborCP::FindNeighbor(point p)
{
	// if no neighbors avail, set flag for UpdatePoint to find
	if (npoints == 1) {
		neighbors[p] = p;
		return;
	}

	// find first point unequal to p itself
	int first_nbr = 0;
	if (p == points[first_nbr]) first_nbr = 1;
	neighbors[p] = points[first_nbr];
	nbr_dist[p] = dist(p, neighbors[p]);

	// now test whether each other point is closer
	for (long i = first_nbr + 1; i  nbr_dist[q]) FindNeighbor(q);
		}
	}
}

// Single distance has changed, check if our structures are ok
void NeighborCP::UpdateDistance(point p, point q)
{
	double d = dist(p,q);

	if (d  nbr_dist[p]) FindNeighbor(p);

	if (d  nbr_dist[q]) FindNeighbor(q);
}
 