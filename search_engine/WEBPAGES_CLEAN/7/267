 
      cs122b-2017-winter – Public
    <body>
     
       
           
       
      
      
       
       Login    Preferences    About Trac  
      
     
     
   
     
       
   wiki:  cs122b-2017-winter 
 
       
         Context Navigation 
             Start Page    Index    History  
             
     
       
        
          
           
              Last modified   4 days  ago 
             Last modified on 02/08/17 23:46:16 
           
            
  
  
     CS122B Winter 2017: Projects in Databases and Web Applications 
      
         Online Discussion 
       
       
         Quizzes 
       
       
         Projects (Subject to change) 
       
       
         Syllabus 
       
       
         Course Information 
          
             Overview 
           
           
             More Focus on Cloud Services 
           
           
             Prerequisites 
           
           
             Grading Breakdown 
           
           
             Textbooks 
           
           
             Working in Groups 
           
           
             Project Late Policy 
           
           
             Policy on Academic Honesty 
           
           
             Topic Overview 
           
          
      
   
 
 CS122B Winter 2017: Projects in Databases and Web Applications 
 
Time: T/Th 11:00 am – 12:20 pm (Check   ​ UCI Calendar  for holiday information)    Location:   ​ HSLH 100A .
 
   Instructor</strong>:   ​ Chen Li  chenli AT ics.uci.edu    Office hours: Tuesdays/Thursdays, 9:50 am - 10:50 am, DBH 2092
   Staff Member</strong>: Nailah Alhassoun nailah AT uci.edu    Office hours: Friday, 8:00 am - 9:50 am, Location: ICS 424E
   Staff Member</strong>: Chen Luo, cluo8 AT uci.edu    Office hours: Monday/Wednesday, 3:45 pm - 4:45 pm, Location: ICS CS424E
   Online Discussion 
   Piazza </strong>:   ​ https://piazza.com/class/ixkpbqb3e266fc      Quizzes 
  Quiz 1:  Tuesday, January 31st, 2017</strong>, in class, closed-book, closed-notes.
   Projects (Subject to change) 
 
  ​ Group Signup Sheet 
 
   Project  Topic  Days  Due Date  Proportions
     Project 1   MySQL creation, JDBC, Tomcat, AWS  8 days   1/18/2017, Wednesday, 11:45 pm  12%
     Project 2   Developing Fablix Web site   ​ An earlier demo   19 days  2/06/2017, Monday, 11:45 pm   28%
     Project 3   reCaptcha, HTTPS, Stored Procedure, XML Parsing  14 days   2/20/2017, Monday, 11:45 pm  21%
    Project 4  Ajax, Search, UDF, and Android  16 days  3/8/2017, Wednesday, 11:45 pm  24%
    Project 5  Performance Tuning   9 days  3/17/2017, Friday, 11:45 pm  15%
    Syllabus 
    No.     Date</strong>     Notes</strong> 
     01    01/10/17, Tu     Introduction  ​ ,  Project 1 , AWS 
     02    01/12/17, Th     Tasks ,  Sample JDBC Programs ,  ODBC  ​   
     03    01/17/17, Tu      ​ MySQL Logging ,  Project 2 ,   ​ Install Tomcat ,  TomcatTest Example ,   ​ Tomcat Logging  
     04    01/19/17, Th     Form Example ,  Servlet Session Example ,   ​ "Cookie Idea" in Movie Memento   
     05    01/24/17, Tu      ​ GET/POST methods , Shopping cart (client vs server),    ​ Pagination , Caching,  Project 2 Step-By-Step  
     06    01/26/17, Th    "Browsing", "Searching",   ​ Open a Window Using Javascript , Javascript debugging,   JSP ,   ​ ASP  
     07    01/31/17, Tu     Web Application Architectures  ​ , Quiz 1 
     08    02/02/17, Th     Domain registration  ​ ,  reCaptcha  
     09    02/07/17, Tu    Project 2 demos,  Project 3 ,  Stored Procedures  ​  
     10    02/09/17, Th     HTTPS ,  XML  ​ ,  Sample Employee XML File  ​ ,  SAX Parser  ​ ,  Employee.java  ​ ,  DOM Parser  ​  
    Course Information 
 Overview 
 
This course exposes students to advanced programming concepts and provides students with a greater focus on using DBMS techniques to build Web-based applications. It is intended for two purposes: (1) It introduces students to the modern data management techniques including database connectivity, Web application development, extending database functions, database administration, and XML. (2) It teaches students how to use these technologies to build real-world applications. The course builds on   ​ CS122A , which introduces students to the classical relational databases and SQL programming. 
 
 More Focus on Cloud Services 
 
We will heavily use Amazon AWS services in the course.  You are expected to launch instances on AWS to deploy some of the projects you are developing.  AWS provides free-tier 64-bit Ubuntu instances!  In addition, you are welcome to participate in the   ​ AWS Educate  program, which can provide $100 AWS credits per student. (I believe UCI is a member institution.)  We will provide more instructions about how to use their services to deploy your projects.
 
 Prerequisites 
 
You should have taken CS122A or an equivalent course. In addition, you should have a reasonable understanding of core computer science concepts, good familiarity with relational databases (equivalent of CS122A), good programming skills in Java, skills to learn other programming languages, and familiarity with basic undergraduate-level operating system concepts. Above all, you need to have a positive attitude towards learning, no inhibitions about working in groups and learning from each other.   If you are not sure whether you meet requirements, do talk to the instructor after the first lecture to make sure you are ready to take this course.</strong>
 
 Grading Breakdown 
 
Projects: 88%   In-class Quizzes: 11%   Participation in EEE Class Evaluation: 1%   
 
For all the graded projects and exams, if you disagree with the grading, you can discuss with us within  two weeks</strong> after they are returned. After that, all the grades will be finalized.
 
 
For each project demo, we assume each group can provide their own computing environment (either a laptop or a remote desktop) to show the demo.  If you cannot provide such an environment, please let us know before the demo, so that we can find a solution.
 
 Textbooks 
 
Many online tutorials.
 
 Working in Groups 
 
Working together on projects is strongly encouraged. You can form groups of no more than  3 (three)  students and submit one homework solution per group making sure that the names of all the group members appear on the first page. Work in groups will be graded on a per group basis.
 
 
Students may leave their existing group in the quarter. But they cannot join any new group after the end of the  second week</strong>. For each group splitting, the group members should tell the instructor at least  two weeks</strong> before the corresponding project/homework deadline.
 
 
At the end of the quarter, I will announce the top 3 students based on their overall performance in the class (projects and quizzes).  I will host a lunch with these students :-)
 
 Project Late Policy 
 
  
 
  The official due date for each assignment is listed here on the wiki, and it is expected that students will turn the work in on or before that date.
  We will offer a  24-hour grace period</strong> for each assignment, and will therefore accept submissions turned in within 24 hours of the due date, with a 10-point penalty.  It's 10 points, not 10 percent.  For example, if your late project got 87 points, then your real score will be 87-10=77 points. Notice that EEE will only keep the latest submission. If so you submit or resubmit the project after the deadline, it will be considered as a late submission.
  Late assignments will NOT be accepted beyond the grace period, so do always aim to be on time! Please don't even ask, as this is what the 1-day grace period is intended for.
   Policy on Academic Honesty 
 
All students will be expected to adhere to the UCI and ICS Academic Honesty policies (see   ​ http://www.ics.uci.edu/ugrad/policies/index.php#academic_honesty  to read their details). Any student found to be involved in cheating or aiding others in doing so will be academically prosecuted to the maximum extent possible: that means you will fail this course.  Just say  no  to cheating!
 
 
In case you reuse another party's source code for certain generic tasks (e.g., JDBC access) make sure you explicitly comment on its origin in your source code.
 
 Topic Overview 
 
   
 
  
        
        
       
      
     
         Attachments 
          
     notes01-intro.ppt  ​ 
       ( 164.5 KB ) -
      added by  chenli   5 weeks  ago.
               Notes 01 
             
             
     notes02-odbc.ppt  ​ 
       ( 346.0 KB ) -
      added by  chenli   5 weeks  ago.
               Notes 02 
             
             
     notes03-webapps.ppt  ​ 
       ( 485.0 KB ) -
      added by  chenli   3 weeks  ago.
               Lecture 03: PPT 
             
             
     notes04-dns-recaptcha.ppt  ​ 
       ( 917.0 KB ) -
      added by  chenli   10 days  ago.
               Notes 04 
             
             
     CS122B-overview.png  ​ 
       ( 35.2 KB ) -
      added by  chenli   6 days  ago.
               CS122B overview 
             
             
     notes05-stored-procedures.ppt  ​ 
       ( 676.5 KB ) -
      added by  chenli   6 days  ago.
               Notes 05: stored procedures 
             
             
     notes05-xml.ppt  ​ 
       ( 768.5 KB ) -
      added by  chenli   4 days  ago.
             
          

     
     
       Download in other formats: 
        
           Plain Text 
         
        
     
         
       Powered by   Trac 0.12.5</strong>  
        By  Edgewall Software . 
       Visit the Trac open source project at  http://trac.edgewall.org/  
     
  </body> 