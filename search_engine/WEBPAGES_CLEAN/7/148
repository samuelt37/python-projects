 Lectures/Lab<body>

 
 Lecture/Lab Schedule 
 
  ICS-33: Intermediate Programming  
 

  Course Expectations 

 Lectures and Labs 
Learning to program is an intensive activity.
We will have class every day of the week: MWF lectures and TuTh labs.
By staying on task 5-days per week, learning and practicing what we learn,
  we are more likely to master programming in Python.
One learns programming by practicing programming.


 Work Before, During, and After Lecture 
I expect students to read the assigned lecture materials, either before
  class (as a way to preview the lecture) or after class (where the lecture
  previews the reading), to get the most out of both: cover the material twice.
I will lecture during class, but I prefer discussing the material and
  answering questions; asking you questions about the material, and amplifying
  on those topics that need further discussion.
I expect most "lectures" to be interactive, with students participating.
Class mottos: "Those who are ashamed of asking are ashamed of learning."
  and "The only stupid question is the one left unasked."
 
Try to work out solutions to the assigned problems, to prove that you have
  understood the material; you can often test/verify/explore your solutions
  on the computer.
Here  understanding  means "be able to use the information operationally
  to write code that solves problems".
If you have difficultly with a problem, it indicates that you should probably
  go back over the related reading -or certainly ask a question about it
  on the MessageBoard Forums.
One of the few advantages of a big class like this is the potental for
  peer-teaching.
  
Because these problems are not graded, feel free to discuss them, but don't
  give away the answers for those still working on them: working on exercises
  like these builds your programming muscles.
Students will be required to solve similar problems on weekly take-home
 quizzes, on which collaboration is NOT allowed.
Don't cheat yourself in this aspect of the course.
  


  Lecture Attendance and Decorum 
I expect students to attend class daily, arriving on time, and settling down
  when class starts.
The announcements made at the start of class are often very important.
I expect students to neither carry on private conversations, nor use
  their computers to answer e-mail, surf the web, day trade stocks, or
  perform any other activities unrelated to this course.
Do not use your personal media in any way that would disturb students sitting
  near you.
 
Someone once said, "Distance education begins in the 8th row of the classroom":
  once you are that far back, it is easy to stop paying attention.
So, I recommend that students sit in the rows that are at the front of the room.
More than once I have had a comment like the following on my final teaching
  evaluation, "Write bigger: I could never read what you wrote on the
  whiteboard from my seat in the back of the class."
I have many deficiencies as an instructor; students should help themselves get
 what they need out of this class -like by sitting near the front if necessary.
  
Ringing cell phones disrupt my lectures.
Unless you are responsible for someone's life, your cell phone should be
  turned off.
Otherwise, you should set it to operate in some silent mode (as mine will be
  set); if it rings silently and you decide you must answer the call, please
  leave the class, with a minimum of disruption to the rest of the students.
If your cell phone rings audibly in class, you will be asked to leave class for
  that day.
Finally, if you know that you must leave early, please sit by a door, so that
  you can exit quietly and without disturbing others in the class.
  
Overall, please strive to be a considerate class member, both to me and to
  your fellow students; doing so is especially important in large classes.
  

   
  Schedule, Topics, Readings, and Problems 
 



     Week  
      Activity       
 Date 
 Topic (read for this date/do problems) 
 Problems 
     Pre-class  Lab 
 1/5 
   Start  
        Program #0 : Python, Eclipse (Debugger Perspective),
        and Testing 
   &amp;nbsp 

 
      Lecture 
 1/6 
    
        Course Overview  (all)  
      A Review of File Reading  
   1,3,5,9 1 





   #1  Lecture 
 1/9 
    
      Review Python I: start - paralle/tuple/list assignment 
    1-9 


      Lab 
 1/10 
   Work on  
        Program #0 : Python, Eclipse (Debugger Perspective),
        and Testing 
     


      Lecture 
 1/11 
    
      Review Python II: iterable - hashable vs. mutable 
    10-15 


      Lab 
 1/12 
   Start  
        Program #1 : Iteration and Major Data Types 
     


      Lecture 
 1/13 
    
      Review Python III: comprehensions - trivial things   
      Parameters: Including * and ** (examples)  
   16a-17 





   #2  Lecture 
 1/16 

    Holiday (No Classes): Martin Luther King, Jr. Day ; but read  
      EBNF: A Notation to Describe Syntax   
      Typographic conventions for EBNF documenting Python 
    1,2,6,7 


      Lab 
 1/17 
   Work on  
        Program #1 : Iteration and Major Data Types 
     


   &amp;nbsp  Lecture 
 1/18 
    
        Regular Expressions: Patterns   
        retester.py (Regular Expression Tester)   
        Online regular expression tester (for Python)  
        Click  Python  in  Your regular expression in: 
   
   2,4,5,7 


      Lab 
 1/19 
   Work on  
        Program #1 : Iteration and Major Data Types 
     


      Lecture 
 1/20 
    
        Regular Expressions: Methods   
        remethods (Folder with programs illustrating RE methods)    8,9 






   #3  Lecture 
 1/23 
    
    Class Review  
   2,3,5 


      Lab 
 1/24 
   Start  
        Program #2 : Classes, Overloaded Operators, Iterators 
     


      Lecture 
 1/25 
    
    Class Operator Overloading I  
    
   1,2 


      Lab 
 1/26 
   Work on  
        Program #2 : Classes, Overloaded Operators, Iterators 
     


   &amp;nbsp  Lecture 
 1/27 
    
    Class Operator Overloading  II  
    
   2,4 





   #4  Lecture 
 1/30 
    
      Iterator Protocol and Examples of Use  
   1,3,4,7 


      Lab 
 1/31 
   Practice setting-up for In-Lab Programming Exam (given Thursday) 
      Work on  
        Program #2 : Classes, Overloaded Operators, Iterators 
     


      Lecture 
 2/1 
    
      Iterators in Classes with iter and next  
   1,2,4,5 


      Lab 
 2/2 
    
    In-Lab Programming Exam I: Iteration and Major Data Types 
   
     


   &amp;nbsp  Lecture 
 2/3 
    
      Generators (and yield): Functions that Act Like Iterators  
   2,4,5 





   #5  Lecture 
 2/6 
    
      Recursive Functions  
   1,3,6 


      Lab 
 2/7 
   Start  
        Program #3 : namedtuple 
     


      Lecture 
 2/8 
    
      Functional Programming/Combinatorial Computing   
      Solution to Minimum # of Stamps Problem   
   1,3,6,7 


      Lab 
 2/9 
   Work on  
        Program #3 : namedtuple 
     


      Lecture 
 2/10 
    
      Decorators 
  (download  decorators project ) 

   1 




   #6  Lecture 
 2/13 
    
      Linked Lists 
  (download  linked list project ) 
   1,2,4,5 


      Lab 
 2/14 
   Work on  
        Program #3 : namedtuple 
     


      Lecture 
 2/15 
    
      Trees I 
  (download  tree project )
 
   1,3,4,5 


      Lab 
 2/16 
    Midterm Written Exam 
       (covering Lectures 1/9-2/10) 
   1,3,5 


      Lecture 
 2/17 
    
      Trees II 
  (download  tree2 project )
 
   &amp;nbsp 





   #7  Lecture 
 2/20 
    Holiday (No Classes): Presidents' Day
       

      Lab 
 2/21 
   Start  
        Program #4 : Annotation Checker 
     


   &amp;nbsp  Lecture 
 2/22 
    
        Inheritance I 
  (download  counters project ) 
   1-3 


      Lab 
 2/23 
   Work on  
        Program #4 : Annotation Checker 
     
  

      Lecture 
 2/24 
  
        Inheritance II 
  (download  inheritance project ) 
        
   1 




   #8  Lecture 
 2/27 
    
        Inheritance III 
    1-2 


      Lab 
 2/28 
   Work on  
        Program #4 : Annotation Checker 
     


   &amp;nbsp  Lecture 
 3/1 
    
      Analysis of Algorithms and Complexity Classes  
   1-3 


      Lab 
 3/2 


      Lecture 
 3/3 

    
      The Complexity of Python Operators/Functions  
   tba 




   #9  Lecture 
 3/6 
    
      Empirical Efficiency (up to Hashing for sets and dicts)  
  (download  empirical project ) 
   tba 


      Lab 
 3/7 
   Start  
        Program #5 : Inheritance and Animation 
     


   &amp;nbsp  Lecture 
 3/8 
    
      
      UnitTest 
(download  unittests project )
(view  unittest pictures ) 
   tba 


      Lab 
 3/9 


    
    In-Lab Programming Exam II: Classes, Overloaded Operators, Iterators 
   
     

      Lecture 
 3/10 

   Finish Empirical Efficiency and UnitTest
      




   #10  Lecture 
 3/13 
    
      Python Machine [Code] 
(download  disassembly project )
      
      


      Lab 
 3/14 
   Work On  
        Program #5 : Inheritance and Animation 
     


      Lecture 
 3/15 
    
      Introduction to Java: Static Typing/Collection Classes  
     


      Lab 
 3/16 
   Work On  
        Program #5 : Inheritance and Animation 
     


      Lecture 
 3/17 
   Class Wrapup and
       
      Quick Review for Final Exam  
     




   Finals Exam Week  3/22 
     We will have a comprehensive 2-hour written
      final exam on Wednesday, March 22nd
       1:30pm - 3:30pm
      
      in our lecture hall (see the
        
      Final Exam Schedule ).
     Bring a photo ID with a  legible name and picture 
        (UCI, drivers license, passport, etc.)
      I will send email when I have computed/entered final grades,
        which are due to UCI by Thursday, March 30th at 5pm.
        


   </body> 