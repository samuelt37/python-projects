 Python: module src.na<body>

             src  .na</strong>   (28 February 2006)     index   /home/todd/release/pdb2pqr-1.1.0/src/na.py        Nucleic  Acid Structures for PDB2PQR 
  
This module contains the base nucleic acid structures for 
pdb2pqr. 
  
---------------------------- 
  
PDB2PQR -- An automated pipeline for the setup, execution, and analysis of 
Poisson-Boltzmann electrostatics calculations 
  
Nathan  A . Baker (baker@biochem.wustl.edu) 
Todd Dolinsky (todd@ccb.wustl.edu) 
Dept. of Biochemistry and Molecular Biophysics 
Center for Computational Biology 
Washington University in St. Louis 
  
Jens Nielsen (Jens.Nielsen@ucd.ie) 
University College Dublin 
  
Additional contributing authors listed in documentation and supporting 
package licenses. 
  
Copyright (c) 2003-2006.  Washington University in St. Louis.   
All Rights Reserved. 
  
This file is part of PDB2PQR. 
  
PDB2PQR is free software; you can redistribute it and/or modify 
it under the terms of the GNU General Public License as published by 
the Free Software Foundation; either version 2 of the License, or 
(at your option) any later version. 
  
PDB2PQR is distributed in the hope that it will be useful, 
but WITHOUT ANY WARRANTY; without even the implied warranty of 
MERCHANTABILITY or FITNESS FOR  A  PARTICULAR PURPOSE.  See the 
GNU General Public License for more details. 
  
You should have received a copy of the GNU General Public License 
along with PDB2PQR; if not, write to the Free Software 
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA 
  
----------------------------  
 
         Modules</strong>                  
     copy   math     os   string     sys           
         Classes</strong>                  
     src.structures.Residue 
   
    Nucleic 
   
    A 
     C 
     G 
     T 
     U 
    
  
  
        class  A</strong> ( Nucleic )           
  Adenosine class 
  
This class gives data about the Adenosine object, and inherits 
off the base residue class.         
   Method resolution order: 
  A  
  Nucleic  
  src.structures.Residue  
  
Methods defined here:     __init__</strong> (self, atoms, ref)   Initialize the class 
  
Parameters 
    atoms:       A  list of Atom objects to be stored in this class 
                (list)       setState</strong> (self)   Set the state to distinguish RNA from DNA.    
Methods inherited from  Nucleic :     addAtom</strong> (self, atom)   Override the existing addAtom - include the link to the 
reference object       addDihedralAngle</strong> (self, value)   Add the value to the list of chiangles 
  
Parameters 
    value: The value to be added (float)       createAtom</strong> (self, atomname, newcoords)   Create an atom.  Overrides the generic residue's  createAtom (). 
  
Parameters 
    atomname:  The name of the atom to add (string) 
    newcoords: The coordinates of the atom (list)    
Methods inherited from  src.structures.Residue :     __str__</strong> (self)   Basic string representation for debugging       addMissing</strong> (self, value)   Add the value to the list of missing atoms 
  
Parameters 
    value: The name of the missing atom (string)       get</strong> (self, name)   Get a member of the  Residue  class 
  
Parameters 
    name:          The name of the member (string) 
Possible Values 
    atoms:         The atoms in the residue 
    name:          The name of the residue 
    chainID:       The chainID associated with the residue 
    resSeq:        The sequence number of the residue 
    icode:         The iCode of the residue 
    SSbonded:      1 if the residue has a SS bond, 0 otherwise 
    SSbondpartner: The residue of the bond partner 
    type:          The type associated with this residue 
    isNterm:       # of hydrogens if the residue is the N-Terminus, 0 otherwise 
    isCterm:       1 if the residue is the  C -Terminus, 0 otherwise 
    missing:     List of missing atoms of the residue 
Returns 
    item:          The value of the member       getAtom</strong> (self, name)   Retrieve an atom from the mapping 
  
Parameters 
    resname: The name of the residue to retrieve (string)       getAtoms</strong> (self)      getCharge</strong> (self)   Get the total charge of the residue.  In order to get rid 
of floating point rounding error, do the string 
transformation. 
  
Returns: 
    charge: The charge of the residue (float)       hasAtom</strong> (self, name)      numAtoms</strong> (self)   Get the number of atoms for the residue 
  
Returns 
    count:  Number of atoms in the residue (int)       removeAtom</strong> (self, atomname)   Remove an atom from the residue object. 
  
Parameters 
    atomname: The name of the atom to be removed (string)       renameAtom</strong> (self, oldname, newname)   Rename an atom to a new name 
  
Parameters 
    oldname: The old atom name (string) 
    newname: The new atom name (string)       renameResidue</strong> (self, name)   Rename a given residue 
  
Parameters 
    name:       The new name of the residue       rotateTetrahedral</strong> (self, atom1, atom2, angle)   Rotate about the atom1-atom2 bond by a given angle 
All atoms connected to atom2 will rotate. 
  
Parameters: 
    atom1:  The first atom of the bond to rotate about (atom) 
    atom2:  The second atom of the bond to rotate about (atom) 
    angle:  The number of degrees to rotate (float)       set</strong> (self, name, value)   Set a member of the  Residue  class to a specific value  
  
Parameters 
    name:          The name of the object to set (string) 
    value:         The object to append 
Possible Values 
    atoms:         The atoms in the residue 
    name:          The name of the residue 
    chain:         The chainID associated with the residue 
    resSeq:        The sequence number of the residue 
    icode:         The iCode of the residue 
    SSbonded:      1 if the residue has a SS bond, 0 otherwise 
    SSbondpartner: The residue of the bond partner 
    type:          The type associated with this residue 
    isNterm:       # of hydrogens if the residue is the N-Terminus, 0 otherwise 
    isCterm:       1 if the residue is the  C -Terminus, 0 otherwise 
    isDirty:       1 if the residue is not missing atoms, 
                   0 otherwise 
Notes 
    resSeq points to the residue.setResSeq function 
Returns 
    item:          The value of the member       setChainID</strong> (self, value)   Set the chainID field to a certain value       setDonorsAndAcceptors</strong> (self)   Set the donors and acceptors within the residue       setResSeq</strong> (self, value)   Set the atom field resSeq to a certain value and 
change the residue's information.  The icode field is no longer 
useful. 
  
Parameters 
    value:  The new value of resSeq (int)       
        class  C</strong> ( Nucleic )           
  Cytidine class 
  
This class gives data about the Cytidine object, and inherits 
off the base residue class.         
   Method resolution order: 
  C  
  Nucleic  
  src.structures.Residue  
  
Methods defined here:     __init__</strong> (self, atoms, ref)   Initialize the class 
  
Parameters 
    atoms:       A  list of Atom objects to be stored in this class 
                (list)       setState</strong> (self)   Set the state to distinguish RNA from DNA.    
Methods inherited from  Nucleic :     addAtom</strong> (self, atom)   Override the existing addAtom - include the link to the 
reference object       addDihedralAngle</strong> (self, value)   Add the value to the list of chiangles 
  
Parameters 
    value: The value to be added (float)       createAtom</strong> (self, atomname, newcoords)   Create an atom.  Overrides the generic residue's  createAtom (). 
  
Parameters 
    atomname:  The name of the atom to add (string) 
    newcoords: The coordinates of the atom (list)    
Methods inherited from  src.structures.Residue :     __str__</strong> (self)   Basic string representation for debugging       addMissing</strong> (self, value)   Add the value to the list of missing atoms 
  
Parameters 
    value: The name of the missing atom (string)       get</strong> (self, name)   Get a member of the  Residue  class 
  
Parameters 
    name:          The name of the member (string) 
Possible Values 
    atoms:         The atoms in the residue 
    name:          The name of the residue 
    chainID:       The chainID associated with the residue 
    resSeq:        The sequence number of the residue 
    icode:         The iCode of the residue 
    SSbonded:      1 if the residue has a SS bond, 0 otherwise 
    SSbondpartner: The residue of the bond partner 
    type:          The type associated with this residue 
    isNterm:       # of hydrogens if the residue is the N-Terminus, 0 otherwise 
    isCterm:       1 if the residue is the  C -Terminus, 0 otherwise 
    missing:     List of missing atoms of the residue 
Returns 
    item:          The value of the member       getAtom</strong> (self, name)   Retrieve an atom from the mapping 
  
Parameters 
    resname: The name of the residue to retrieve (string)       getAtoms</strong> (self)      getCharge</strong> (self)   Get the total charge of the residue.  In order to get rid 
of floating point rounding error, do the string 
transformation. 
  
Returns: 
    charge: The charge of the residue (float)       hasAtom</strong> (self, name)      numAtoms</strong> (self)   Get the number of atoms for the residue 
  
Returns 
    count:  Number of atoms in the residue (int)       removeAtom</strong> (self, atomname)   Remove an atom from the residue object. 
  
Parameters 
    atomname: The name of the atom to be removed (string)       renameAtom</strong> (self, oldname, newname)   Rename an atom to a new name 
  
Parameters 
    oldname: The old atom name (string) 
    newname: The new atom name (string)       renameResidue</strong> (self, name)   Rename a given residue 
  
Parameters 
    name:       The new name of the residue       rotateTetrahedral</strong> (self, atom1, atom2, angle)   Rotate about the atom1-atom2 bond by a given angle 
All atoms connected to atom2 will rotate. 
  
Parameters: 
    atom1:  The first atom of the bond to rotate about (atom) 
    atom2:  The second atom of the bond to rotate about (atom) 
    angle:  The number of degrees to rotate (float)       set</strong> (self, name, value)   Set a member of the  Residue  class to a specific value  
  
Parameters 
    name:          The name of the object to set (string) 
    value:         The object to append 
Possible Values 
    atoms:         The atoms in the residue 
    name:          The name of the residue 
    chain:         The chainID associated with the residue 
    resSeq:        The sequence number of the residue 
    icode:         The iCode of the residue 
    SSbonded:      1 if the residue has a SS bond, 0 otherwise 
    SSbondpartner: The residue of the bond partner 
    type:          The type associated with this residue 
    isNterm:       # of hydrogens if the residue is the N-Terminus, 0 otherwise 
    isCterm:       1 if the residue is the  C -Terminus, 0 otherwise 
    isDirty:       1 if the residue is not missing atoms, 
                   0 otherwise 
Notes 
    resSeq points to the residue.setResSeq function 
Returns 
    item:          The value of the member       setChainID</strong> (self, value)   Set the chainID field to a certain value       setDonorsAndAcceptors</strong> (self)   Set the donors and acceptors within the residue       setResSeq</strong> (self, value)   Set the atom field resSeq to a certain value and 
change the residue's information.  The icode field is no longer 
useful. 
  
Parameters 
    value:  The new value of resSeq (int)       
        class  G</strong> ( Nucleic )           
  Guanosine class 
  
This class gives data about the Guanosine object, and inherits 
off the base residue class.         
   Method resolution order: 
  G  
  Nucleic  
  src.structures.Residue  
  
Methods defined here:     __init__</strong> (self, atoms, ref)   Initialize the class 
  
Parameters 
    atoms:       A  list of Atom objects to be stored in this class 
                (list)       setState</strong> (self)   Set the state to distinguish RNA from DNA.    
Methods inherited from  Nucleic :     addAtom</strong> (self, atom)   Override the existing addAtom - include the link to the 
reference object       addDihedralAngle</strong> (self, value)   Add the value to the list of chiangles 
  
Parameters 
    value: The value to be added (float)       createAtom</strong> (self, atomname, newcoords)   Create an atom.  Overrides the generic residue's  createAtom (). 
  
Parameters 
    atomname:  The name of the atom to add (string) 
    newcoords: The coordinates of the atom (list)    
Methods inherited from  src.structures.Residue :     __str__</strong> (self)   Basic string representation for debugging       addMissing</strong> (self, value)   Add the value to the list of missing atoms 
  
Parameters 
    value: The name of the missing atom (string)       get</strong> (self, name)   Get a member of the  Residue  class 
  
Parameters 
    name:          The name of the member (string) 
Possible Values 
    atoms:         The atoms in the residue 
    name:          The name of the residue 
    chainID:       The chainID associated with the residue 
    resSeq:        The sequence number of the residue 
    icode:         The iCode of the residue 
    SSbonded:      1 if the residue has a SS bond, 0 otherwise 
    SSbondpartner: The residue of the bond partner 
    type:          The type associated with this residue 
    isNterm:       # of hydrogens if the residue is the N-Terminus, 0 otherwise 
    isCterm:       1 if the residue is the  C -Terminus, 0 otherwise 
    missing:     List of missing atoms of the residue 
Returns 
    item:          The value of the member       getAtom</strong> (self, name)   Retrieve an atom from the mapping 
  
Parameters 
    resname: The name of the residue to retrieve (string)       getAtoms</strong> (self)      getCharge</strong> (self)   Get the total charge of the residue.  In order to get rid 
of floating point rounding error, do the string 
transformation. 
  
Returns: 
    charge: The charge of the residue (float)       hasAtom</strong> (self, name)      numAtoms</strong> (self)   Get the number of atoms for the residue 
  
Returns 
    count:  Number of atoms in the residue (int)       removeAtom</strong> (self, atomname)   Remove an atom from the residue object. 
  
Parameters 
    atomname: The name of the atom to be removed (string)       renameAtom</strong> (self, oldname, newname)   Rename an atom to a new name 
  
Parameters 
    oldname: The old atom name (string) 
    newname: The new atom name (string)       renameResidue</strong> (self, name)   Rename a given residue 
  
Parameters 
    name:       The new name of the residue       rotateTetrahedral</strong> (self, atom1, atom2, angle)   Rotate about the atom1-atom2 bond by a given angle 
All atoms connected to atom2 will rotate. 
  
Parameters: 
    atom1:  The first atom of the bond to rotate about (atom) 
    atom2:  The second atom of the bond to rotate about (atom) 
    angle:  The number of degrees to rotate (float)       set</strong> (self, name, value)   Set a member of the  Residue  class to a specific value  
  
Parameters 
    name:          The name of the object to set (string) 
    value:         The object to append 
Possible Values 
    atoms:         The atoms in the residue 
    name:          The name of the residue 
    chain:         The chainID associated with the residue 
    resSeq:        The sequence number of the residue 
    icode:         The iCode of the residue 
    SSbonded:      1 if the residue has a SS bond, 0 otherwise 
    SSbondpartner: The residue of the bond partner 
    type:          The type associated with this residue 
    isNterm:       # of hydrogens if the residue is the N-Terminus, 0 otherwise 
    isCterm:       1 if the residue is the  C -Terminus, 0 otherwise 
    isDirty:       1 if the residue is not missing atoms, 
                   0 otherwise 
Notes 
    resSeq points to the residue.setResSeq function 
Returns 
    item:          The value of the member       setChainID</strong> (self, value)   Set the chainID field to a certain value       setDonorsAndAcceptors</strong> (self)   Set the donors and acceptors within the residue       setResSeq</strong> (self, value)   Set the atom field resSeq to a certain value and 
change the residue's information.  The icode field is no longer 
useful. 
  
Parameters 
    value:  The new value of resSeq (int)       
        class  Nucleic</strong> ( src.structures.Residue )           
   Nucleic  class 
  
This class provides standard features of the nucleic acids listed 
below 
  
Parameters 
    atoms:   A  list of Atom objects to be stored in this class 
             (list) 
    ref:    The reference object for the amino acid.  Used to 
            convert from the alternate naming scheme to the 
            main naming scheme.         
 Methods defined here:     __init__</strong> (self, atoms, ref)      addAtom</strong> (self, atom)   Override the existing addAtom - include the link to the 
reference object       addDihedralAngle</strong> (self, value)   Add the value to the list of chiangles 
  
Parameters 
    value: The value to be added (float)       createAtom</strong> (self, atomname, newcoords)   Create an atom.  Overrides the generic residue's  createAtom (). 
  
Parameters 
    atomname:  The name of the atom to add (string) 
    newcoords: The coordinates of the atom (list)       setState</strong> (self)   Adds the termini for all inherited objects    
Methods inherited from  src.structures.Residue :     __str__</strong> (self)   Basic string representation for debugging       addMissing</strong> (self, value)   Add the value to the list of missing atoms 
  
Parameters 
    value: The name of the missing atom (string)       get</strong> (self, name)   Get a member of the  Residue  class 
  
Parameters 
    name:          The name of the member (string) 
Possible Values 
    atoms:         The atoms in the residue 
    name:          The name of the residue 
    chainID:       The chainID associated with the residue 
    resSeq:        The sequence number of the residue 
    icode:         The iCode of the residue 
    SSbonded:      1 if the residue has a SS bond, 0 otherwise 
    SSbondpartner: The residue of the bond partner 
    type:          The type associated with this residue 
    isNterm:       # of hydrogens if the residue is the N-Terminus, 0 otherwise 
    isCterm:       1 if the residue is the  C -Terminus, 0 otherwise 
    missing:     List of missing atoms of the residue 
Returns 
    item:          The value of the member       getAtom</strong> (self, name)   Retrieve an atom from the mapping 
  
Parameters 
    resname: The name of the residue to retrieve (string)       getAtoms</strong> (self)      getCharge</strong> (self)   Get the total charge of the residue.  In order to get rid 
of floating point rounding error, do the string 
transformation. 
  
Returns: 
    charge: The charge of the residue (float)       hasAtom</strong> (self, name)      numAtoms</strong> (self)   Get the number of atoms for the residue 
  
Returns 
    count:  Number of atoms in the residue (int)       removeAtom</strong> (self, atomname)   Remove an atom from the residue object. 
  
Parameters 
    atomname: The name of the atom to be removed (string)       renameAtom</strong> (self, oldname, newname)   Rename an atom to a new name 
  
Parameters 
    oldname: The old atom name (string) 
    newname: The new atom name (string)       renameResidue</strong> (self, name)   Rename a given residue 
  
Parameters 
    name:       The new name of the residue       rotateTetrahedral</strong> (self, atom1, atom2, angle)   Rotate about the atom1-atom2 bond by a given angle 
All atoms connected to atom2 will rotate. 
  
Parameters: 
    atom1:  The first atom of the bond to rotate about (atom) 
    atom2:  The second atom of the bond to rotate about (atom) 
    angle:  The number of degrees to rotate (float)       set</strong> (self, name, value)   Set a member of the  Residue  class to a specific value  
  
Parameters 
    name:          The name of the object to set (string) 
    value:         The object to append 
Possible Values 
    atoms:         The atoms in the residue 
    name:          The name of the residue 
    chain:         The chainID associated with the residue 
    resSeq:        The sequence number of the residue 
    icode:         The iCode of the residue 
    SSbonded:      1 if the residue has a SS bond, 0 otherwise 
    SSbondpartner: The residue of the bond partner 
    type:          The type associated with this residue 
    isNterm:       # of hydrogens if the residue is the N-Terminus, 0 otherwise 
    isCterm:       1 if the residue is the  C -Terminus, 0 otherwise 
    isDirty:       1 if the residue is not missing atoms, 
                   0 otherwise 
Notes 
    resSeq points to the residue.setResSeq function 
Returns 
    item:          The value of the member       setChainID</strong> (self, value)   Set the chainID field to a certain value       setDonorsAndAcceptors</strong> (self)   Set the donors and acceptors within the residue       setResSeq</strong> (self, value)   Set the atom field resSeq to a certain value and 
change the residue's information.  The icode field is no longer 
useful. 
  
Parameters 
    value:  The new value of resSeq (int)       
        class  T</strong> ( Nucleic )           
  Thymine class 
  
This class gives data about the Thymine object, and inherits 
off the base residue class.         
   Method resolution order: 
  T  
  Nucleic  
  src.structures.Residue  
  
Methods defined here:     __init__</strong> (self, atoms, ref)   Initialize the class 
  
Parameters 
    atoms:       A  list of Atom objects to be stored in this class 
                (list)       setState</strong> (self)   Set the state to distinguish RNA from DNA.  In this case it is 
always DNA.    
Methods inherited from  Nucleic :     addAtom</strong> (self, atom)   Override the existing addAtom - include the link to the 
reference object       addDihedralAngle</strong> (self, value)   Add the value to the list of chiangles 
  
Parameters 
    value: The value to be added (float)       createAtom</strong> (self, atomname, newcoords)   Create an atom.  Overrides the generic residue's  createAtom (). 
  
Parameters 
    atomname:  The name of the atom to add (string) 
    newcoords: The coordinates of the atom (list)    
Methods inherited from  src.structures.Residue :     __str__</strong> (self)   Basic string representation for debugging       addMissing</strong> (self, value)   Add the value to the list of missing atoms 
  
Parameters 
    value: The name of the missing atom (string)       get</strong> (self, name)   Get a member of the  Residue  class 
  
Parameters 
    name:          The name of the member (string) 
Possible Values 
    atoms:         The atoms in the residue 
    name:          The name of the residue 
    chainID:       The chainID associated with the residue 
    resSeq:        The sequence number of the residue 
    icode:         The iCode of the residue 
    SSbonded:      1 if the residue has a SS bond, 0 otherwise 
    SSbondpartner: The residue of the bond partner 
    type:          The type associated with this residue 
    isNterm:       # of hydrogens if the residue is the N-Terminus, 0 otherwise 
    isCterm:       1 if the residue is the  C -Terminus, 0 otherwise 
    missing:     List of missing atoms of the residue 
Returns 
    item:          The value of the member       getAtom</strong> (self, name)   Retrieve an atom from the mapping 
  
Parameters 
    resname: The name of the residue to retrieve (string)       getAtoms</strong> (self)      getCharge</strong> (self)   Get the total charge of the residue.  In order to get rid 
of floating point rounding error, do the string 
transformation. 
  
Returns: 
    charge: The charge of the residue (float)       hasAtom</strong> (self, name)      numAtoms</strong> (self)   Get the number of atoms for the residue 
  
Returns 
    count:  Number of atoms in the residue (int)       removeAtom</strong> (self, atomname)   Remove an atom from the residue object. 
  
Parameters 
    atomname: The name of the atom to be removed (string)       renameAtom</strong> (self, oldname, newname)   Rename an atom to a new name 
  
Parameters 
    oldname: The old atom name (string) 
    newname: The new atom name (string)       renameResidue</strong> (self, name)   Rename a given residue 
  
Parameters 
    name:       The new name of the residue       rotateTetrahedral</strong> (self, atom1, atom2, angle)   Rotate about the atom1-atom2 bond by a given angle 
All atoms connected to atom2 will rotate. 
  
Parameters: 
    atom1:  The first atom of the bond to rotate about (atom) 
    atom2:  The second atom of the bond to rotate about (atom) 
    angle:  The number of degrees to rotate (float)       set</strong> (self, name, value)   Set a member of the  Residue  class to a specific value  
  
Parameters 
    name:          The name of the object to set (string) 
    value:         The object to append 
Possible Values 
    atoms:         The atoms in the residue 
    name:          The name of the residue 
    chain:         The chainID associated with the residue 
    resSeq:        The sequence number of the residue 
    icode:         The iCode of the residue 
    SSbonded:      1 if the residue has a SS bond, 0 otherwise 
    SSbondpartner: The residue of the bond partner 
    type:          The type associated with this residue 
    isNterm:       # of hydrogens if the residue is the N-Terminus, 0 otherwise 
    isCterm:       1 if the residue is the  C -Terminus, 0 otherwise 
    isDirty:       1 if the residue is not missing atoms, 
                   0 otherwise 
Notes 
    resSeq points to the residue.setResSeq function 
Returns 
    item:          The value of the member       setChainID</strong> (self, value)   Set the chainID field to a certain value       setDonorsAndAcceptors</strong> (self)   Set the donors and acceptors within the residue       setResSeq</strong> (self, value)   Set the atom field resSeq to a certain value and 
change the residue's information.  The icode field is no longer 
useful. 
  
Parameters 
    value:  The new value of resSeq (int)       
        class  U</strong> ( Nucleic )           
  Uridine class 
  
This class gives data about the Uridine object, and inherits 
off the base residue class.         
   Method resolution order: 
  U  
  Nucleic  
  src.structures.Residue  
  
Methods defined here:     __init__</strong> (self, atoms, ref)   Initialize the class 
  
Parameters 
    atoms:       A  list of Atom objects to be stored in this class 
                (list)       setState</strong> (self)   Set the state to distinguish RNA from DNA.  In this case it is 
always RNA.    
Methods inherited from  Nucleic :     addAtom</strong> (self, atom)   Override the existing addAtom - include the link to the 
reference object       addDihedralAngle</strong> (self, value)   Add the value to the list of chiangles 
  
Parameters 
    value: The value to be added (float)       createAtom</strong> (self, atomname, newcoords)   Create an atom.  Overrides the generic residue's  createAtom (). 
  
Parameters 
    atomname:  The name of the atom to add (string) 
    newcoords: The coordinates of the atom (list)    
Methods inherited from  src.structures.Residue :     __str__</strong> (self)   Basic string representation for debugging       addMissing</strong> (self, value)   Add the value to the list of missing atoms 
  
Parameters 
    value: The name of the missing atom (string)       get</strong> (self, name)   Get a member of the  Residue  class 
  
Parameters 
    name:          The name of the member (string) 
Possible Values 
    atoms:         The atoms in the residue 
    name:          The name of the residue 
    chainID:       The chainID associated with the residue 
    resSeq:        The sequence number of the residue 
    icode:         The iCode of the residue 
    SSbonded:      1 if the residue has a SS bond, 0 otherwise 
    SSbondpartner: The residue of the bond partner 
    type:          The type associated with this residue 
    isNterm:       # of hydrogens if the residue is the N-Terminus, 0 otherwise 
    isCterm:       1 if the residue is the  C -Terminus, 0 otherwise 
    missing:     List of missing atoms of the residue 
Returns 
    item:          The value of the member       getAtom</strong> (self, name)   Retrieve an atom from the mapping 
  
Parameters 
    resname: The name of the residue to retrieve (string)       getAtoms</strong> (self)      getCharge</strong> (self)   Get the total charge of the residue.  In order to get rid 
of floating point rounding error, do the string 
transformation. 
  
Returns: 
    charge: The charge of the residue (float)       hasAtom</strong> (self, name)      numAtoms</strong> (self)   Get the number of atoms for the residue 
  
Returns 
    count:  Number of atoms in the residue (int)       removeAtom</strong> (self, atomname)   Remove an atom from the residue object. 
  
Parameters 
    atomname: The name of the atom to be removed (string)       renameAtom</strong> (self, oldname, newname)   Rename an atom to a new name 
  
Parameters 
    oldname: The old atom name (string) 
    newname: The new atom name (string)       renameResidue</strong> (self, name)   Rename a given residue 
  
Parameters 
    name:       The new name of the residue       rotateTetrahedral</strong> (self, atom1, atom2, angle)   Rotate about the atom1-atom2 bond by a given angle 
All atoms connected to atom2 will rotate. 
  
Parameters: 
    atom1:  The first atom of the bond to rotate about (atom) 
    atom2:  The second atom of the bond to rotate about (atom) 
    angle:  The number of degrees to rotate (float)       set</strong> (self, name, value)   Set a member of the  Residue  class to a specific value  
  
Parameters 
    name:          The name of the object to set (string) 
    value:         The object to append 
Possible Values 
    atoms:         The atoms in the residue 
    name:          The name of the residue 
    chain:         The chainID associated with the residue 
    resSeq:        The sequence number of the residue 
    icode:         The iCode of the residue 
    SSbonded:      1 if the residue has a SS bond, 0 otherwise 
    SSbondpartner: The residue of the bond partner 
    type:          The type associated with this residue 
    isNterm:       # of hydrogens if the residue is the N-Terminus, 0 otherwise 
    isCterm:       1 if the residue is the  C -Terminus, 0 otherwise 
    isDirty:       1 if the residue is not missing atoms, 
                   0 otherwise 
Notes 
    resSeq points to the residue.setResSeq function 
Returns 
    item:          The value of the member       setChainID</strong> (self, value)   Set the chainID field to a certain value       setDonorsAndAcceptors</strong> (self)   Set the donors and acceptors within the residue       setResSeq</strong> (self, value)   Set the atom field resSeq to a certain value and 
change the residue's information.  The icode field is no longer 
useful. 
  
Parameters 
    value:  The new value of resSeq (int)          
         Data</strong>                  
  BACKBONE</strong> = ['N', 'CA', 'C', 'O', 'O2', 'HA', 'HN', 'H', 'tN']  DIHEDRAL</strong> = 57.2958  SMALL</strong> = 9.9999999999999995e-08  __author__</strong> = 'Todd Dolinsky'  __date__</strong> = '28 February 2006'    
         Author</strong>                  
 Todd Dolinsky   </body> 