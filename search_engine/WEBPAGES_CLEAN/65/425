 IN4MATX 117 Winter 2009<body>  Informatics 117: Project in Software System Design          Winter Quarter 2009        Course Code 37060 </strong>      (Discussion: 37061; Lab: 37062) </strong>     Last update:      February 17, 2009           	 	 Instructor:    	 	 Richard N. Taylor  	     	 	 Email:    	 	(taylor [at] ics [dot] uci [dot] edu) 	To ensure a response to your email, please include"Informatics 117" in the	subject line and send your email from a UCIaccount.	     	 	 Office hours: 	    After class, or by email appointment     	 	 Lectures:  	   	 	Tuesday and Thursday 11:00-12:20 ,</strong> ICS 253     	 Web site:   	 http://www.ics.uci.edu/~taylor/classes/117/syllabusWQ09.html      What's New?    [January 5, 2009] Website goes live on EEE.       Description   -   Textbook and Readings  -   Schedule  -  Grading  -  Policies             Description    Catalogdescription:    Specification, design, construction, testing, and documentation of a complete  software system using concepts learned in ICS 52, Informatics 101, and Informatics  111. Special emphasis on the need for and use of teamwork, careful planning,  and other techniques for working with large systems. Prerequisites: ICS 51  with a grade of C or better; Informatics 101/CS 141/CSE141 and Informatics  111/CSE121; Mathematics 2A-B and Statistics 67/Mathematics 67. Formerly ICS125.     Textbooks   Remember reading   The Mythical Man-Month ? If you do, you can expect  to profit from that experience in this class. If you don't, you need to read  it, cover to cover BEFORE the class begins. Don't worry, it is a quick and  fun read.. Depending on the projects chosen additional readings from varioussources may be required.     REQUIRED (from earlier classes):       Author: Fred Brooks           Title: The Mythical Man-Month, Anniversary Edition            Note that this book has a lot of white space and blank pages, so            it really will not take you long to read these chapters.          BACKGROUND/GENERAL REFERENCES:       Software Architecture: Foundations, Theory, and Practice  Richard        N. Taylor, Nenad Medvidovic, and Eric M. Dashofy. Copyright © 2010      John Wiley &amp; Sons, Inc. (ISBN-13: 978-0470-16774-8)            Stephen Schach.  Classical and Object-Oriented Software Engineering  (Third      Edition). Irwin, Chicago IL, 1996.     or  Classical and Object-Oriented Software Engineering with UML and C++    or Classical and Object-Oriented Software Engineering with UML and Java            Ghezzi, Jazayeri, &amp; Mandrioli.  Fundamentals of Software Engineering .      Prentice Hall, Englewood Cliffs NJ, 1991.        Lecture Topics    Informatics 117 is on a tight time schedule, thus there is not much time  for review. You are expected to recall the material covered in  the  prerequisite courses. Short supplementary lectures may be given on:    Teamwork and team organizations     Project management     Project cost and schedule estimation     Usability evaluation and user interface prototyping     Software architectural choice     Configuration management and version control     Distributed software engineering     Engineering of distributed applications, including distributed object    technology  Specific choice of lecture topics will depend somewhat on the projects.     Schedule   The schedule is  subject to change .     Week   	 Date   	 Topic   	 Project Items       1         J      A      N      U      A      R      Y       6 Tu       Introduction          Individual website assigned      8 Th      Teams assigned       2          13 Tu      Getting Organized; Managing Time      Prospectus assigned      15 Th              3          20 Tu      Prospectus Reviews      Requirements assigned      22 Th              4          27 Tu      Requirements Reviews               29 Th              5                F      E      B      R      U      A      R      Y       3 Tu      Architecture/design           5 Th      Design assignment available       6          10 Tu      Design reviews             12 Th      Design due       7          17 Tu        Giving demonstrations        Boothmanship        Implementation assigned            19 Th       No class               8          24 Tu      Progress review &amp; presentations              26  Th                     9                M        A        R        C        H           3 Tu         No class              5 Th        Implementation review        Implementation due      10            10 Tu                        12 Th              Final implementation due      Exam       17 Th 10:30-12:30        Scheduled Final Exam time.                      Assignments and Assessment    The project is the focus of this course and will be assessed accordingly.  It will account for  approximately</strong> 80% of your grade; this  is broken down between deliverables, a team Web page, and presentations. The  approximately</strong> remaining  20% will be divided among individual course logs, teamwork, individual leadership  demonstrated, and the final. These are guidelines intended to help students  plan their work in this course. However, the instructor does reserve the   right to make changes in these evaluation criteria.A critcal aspect of success,  however, and thus of assessment, is an effectively functioning team. Just because  a team's code "works" at the end of the quarter does not mean that  they have earned an A. If the team did a poor job on the requirements and design,  for instance, their grade would be much lower, despite "working" code.  Put another way, if your team has to pull an all-nighter to get a working system,  in all likelihood you will not receive the grade you want.    Deliverables The  project nominally consists of five major assignments. The relativeweighting of each deliverable, intended to provide you with some guidance asto how much effort should be devoted to these tasks, and how much importanceI ascribe to them, is indicated in the table below along with the due date, orapproximate due date. The on-line versions of the assignments may still be underconstruction (watch the"what's new"section to see when they are available).             Deliverable/Schedule Item          Weight           Description           Due Date (subject to change)           Individual Web Page         .                 January 13th                            Teams Designated                  .        January 9th                                     Projects Selected/Assigned                  .        January 9th                  Team Web Page         .                 January 15th         Prospectus and Plan                   10                 Prospectus          January 20th                            Prospectus Reviews                  .        week 3                  Requirements Specification                  15                 Requirements         January 29th                            Requirements Reviews                  .        week 4        January 27th and/or 29th         Architecture/Module Specifications                   20                 Architecture/Design         February 12th                            Design Reviews                  .        Week 6        February 12th         Implementation                   20                 Implementation/1st demonstration                                       Code Reviews/Demos                  .        week 9        March 5th         Testing/Test Documentation          15           Implementation/2nd demonstration/Quality          Assurance Report          March 12th                            Demonstrations                  .        week 10 + finals week (TBD)                    Variations on this schedule may be made to accommodate the particular needs  of a given project or a given team. Also, note that a team's grade for a phase  is a function not only of the document/specification developed but also of  any associated test plan and any reviews conducted in class, with the instructor,  with the TA, or with the customer.  Have questions about your intellectual property rights (IPR)? Take a look  at the  UC's  view of the subject  also see  http://www.ucop.edu/ott/genresources/pat-pol_97.html    Deliverable Due Dates   Specific due dates/times will be indicated for each assignment. NO LATE ASSIGNMENTS  WILL BE ACCEPTED. This applies to your final system and all intermediate projects.  Since you are working in this class as part of team, it is the  team's</strong> responsibility  to ensure that assignments are turned in on time. Normal excuses for late assignments,  such as illness, do not apply in a team setting (unless of course everyone  on the team is ill :-)     Deliverable Reviews Each deliverable will be reviewed, some reviews will be conducted before thewhole class.  Your customer should be invited to your team's Prospectus and Requirements  review as well as your demonstration (and, possibly even your design and code  reviews depending on the nature of your customer).  The review is your  team's chance to inform as well as obtain feedback and ideas from all relevant  parties; your document will be reviewed at this time by course staff and clients  as well as the rest of the class.  This review is formal, however, and  each team should have presented and negotiated both relevant documents to the  customer prior to the review (if you haven't, it may be unpleasantly obvious  by the interactions at this time).     Document Requirements   All the documents associated with the above listed phases are integral parts  of systematic software development. Their continued, up-to-date existence is  necessary for successful system development.  Do not delete  documents  after they have been turned in. They must reside permanently on your team's  website.   All deliverable documents, with the exception of performance appraisals as  discussed below, must be prepared on-line and be available as part of your  project home page either as either HTML or .pdf files. NO MS Word files. In  general, the following should be observed.     Cover "page".</strong>      Every deliverable shall have identifying information giving:        Project title                 Development phase and deliverable                 Date                 Team name/number                 Team members                 Phase manager                                     Files and locations (href's)         Table of Contents. </strong>       Every deliverable shall include a table of contents       Specification</strong>.       The system specification (requirements, architecture, module specs,      code) for each deliverable shall correspond in form and content to the      outline provided for that phase. Sections that are not necessary for this      project shall be marked ``N/A''.       Agendas and Minutes. </strong>           Every deliverable shall be accompanied by agendas for and minutes          of team meetings held during the associated period of time.        Performance Appraisals</strong>.           Every deliverable shall be accompanied by  performance            appraisals.  Performance appraisals shall NOT be maintained as            part of the project's web page.         Project WebPage</strong>.           The project deliverables, except for the performance appraisals,          shall be maintained in a project homepage.        ``Fixed up'' Deliverables   For all deliverables, except for the last and except for the "Agendas  and Minutes"  section, you will also have the opportunity to ``fix it'' based on its evaluation.  You may submit an improved version of a deliverable one week after that deliverable  has been graded and receive up to 50% of the points deducted on the initial  version. The purpose of this exercise is for you to both learn how to use the  techniques and so that you do not implement something from a bad design or  specification. You should keep the same responsibilities for the improvement  phase but assign new responsibilities for the next phase.       Course Log   During your career you will need to keep track of how you spend your time  either for you employer or to improve your own productivity. Throughout this  course, you will practice doing this by keeping a course log recording the  time you spend on all activities related to this course. At the beginning of  each week you must submit the previous week's log to the TA. A sheet showing  what should be on the log  is  available . The first log you submit will cover  Week  Two ;  it will be submitted  at the beginning of  Week Three .   Keep a copy of your logs: you will need them at the end of the quarter for  the final review.       Each entry records the date and amount of time spent, type of entry, and  text describing the entry. An entry is one of three types:    A  description  records an activity;     An  explanation  says why something happened;     A  prescription  is a plan for something to do later.    Most entries will be of the first type, but occasionally you should reflect  and think about what is going on. The time entry applies for descriptions of  activities and records the amount of time spent in hours, to the nearest quarter  hour.     You will be marked down only for failing to submit logs each week,  giving  too little detail</strong>, or failing to keep track of time spent.     You are especially encouraged to keep track of the kinds of errors you make  and the amount of time they consume. The purpose of recording these errors  is so that you develop a better understanding of the kinds of mistakes you  typically make. With that understanding you can improve your performance in  the future, by paying extra attention to those areas in which you've had problems  in the past.   Summary of what you turn in, and when:     Weekly, by individual, using a dropbox: course log      for preceding week.      Per deliverable, by team, on website: deliverable      documents.      Per deliverable, by team, on paper, performance appraisals.      Exception:  not</strong> required for the Prospectus.      End of quarter, by individual, on paper: collection      of the course logs for the quarter.      End of quarter, by individual, on paper, "peer      apportionment of credit"      Team Composition, Activities, and Peer Apportionment of Credit  How will teams be composed?  Each team will have 3 to 5 people. I will attempt to balance a team's aggregateexpertise with the needs of a particular project. I will also attempt to accommodatesome personal preferences for teammates. The  course surveyform , which you will turn in on the first week of class, is a key instrumentin assigning the teams. In the end however, I make all the assignments, bothof team composition and of project.    The danger most students perceive in working on projects with other students  is being saddled with (what they think is) a "non-producer". This is particularly  true when you don't get to choose all your teammates (the situation here).  Many factors dictate the use of a multi-person project for this course. You  will not, after all, be able to choose your workmates in the future. One thing  we'll discuss in the class is how to fix dysfunctional teams. Nonetheless,  to alleviate your concerns and to grade you appropriately, at the end of the  term project you will be asked to divide 100 points among the members of your  project team, excluding yourself, corresponding to how you believe they contributed  to the project as a whole (or on a phase-by-phase basis if you wish). In addition,  each team member will be appraised for each phase. This ``peer apportionment  of credit'' will be used to help determine appropriate individual grades for  the project component.     Team Organization   There are several obvious dangers to group work that can be circumvented.  Ensure that there is adequate coordination among the team members. Know each  other's login names for electronic mail. Know each other's phone numbers. Meet  at  least twice per week  (outside of class lecture) at the same, pre-determined  time each week (so as to avoid confusion). The Discussion Section is designed  to guarantee that such meetings are possible for everyone. You are strongly  urged to use that time slot.     Have a contingency plan for submitting a document on time even if the responsible  manager becomes unavailable.     You are  strongly  advised to consult weekly with the instructor/TA  about your progress, problems, questions, etc.     Meetings   Meetings are an important part of a team project. A successful meeting requires  that the meeting have a definite purpose and associated agenda (these are the  responsibility of the phase manager) and that all decisions be recorded in  minutes (the responsibility of the phase clerical person).   The purpose of minutes is to record decisions made and to be available for  updating any team member who misses a meeting. Each deliverable must be accompanied  by agendas and minutes for the team meetings held during the associated period  of time. I.e., keep the agenda, and the minutes, on-line as part of your project  web page. The minutes should outline    Date, time began, time ended     agenda for the meeting     team members present and reason for any member's absence     major design decisions discussed     task assignments made (i.e. action items)     open issues    questions to be asked and plan for getting them answered      future meetings scheduled    topics for next meeting.        Policies    What's the Drop/Add policy? </strong>Since Informatics 117 has a strong  team project orientation, it is essential that the drop/add process be terminated  early. Therefore    NO  drops or adds      after  the end of the  second week </strong> of class.    Course Evalutions.  The online evaluation window for winter quarter  will run from TBA through TBA.     Cheating.  The  UCI  academic honesty policy  applies. Consequences of  cheating in this class:  a letter in your UCI file, and the course grade is lowered,  most likely to  F. Material that is copied from books or Web pages needs to  be quoted and  the source  must  be given.  If you plagarize, you run the severe risk  of failing the class, in a most disgraceful manner.    Disabilities.   If you need an accommodationbecause of a disability, please contactthe instructor and the  Disability ServicesCenter  as soon as possible.       (C) University of California, 2009.    </body> 