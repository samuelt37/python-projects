 ICS 228: Software Environments (Spring 2006)<body>

   
       
 	   
	 	 home  | 
		 teaching  |
	   	 research  |
	   	 publications  |
	   	 bio  |
	   	 resume (PDF)  |
	   	 address 
	 	 
	     
   	   	 André van der Hoek 
  	     
         
     
     
       
           
			   
         
       	       
		        projects
	 	         
		           
				 Calico   CodeExchange   Crowd Development   
		         
           
     
		       
			   
         
       	       
		        Graduate students
	 	         
		           
				 Tariq Ibrahim   Thomas Kwak   Lee Martie   
		         
           
     
		     

		 
		   
			   
				 Course Title  
				Information and Computer Science 228 
				Software Environments 
				Spring 2006  
				 Professor  
				André van der Hoek  http://www.ics.uci.edu/~andre   andre@ics.uci.edu  
				Office: ICS2 207 
				Phone: +1 949-824-6326   
				 Logistics  
				Location: CS 253 
				Day and time: Tuesday and Thursday, 11:00-12:20
				  
				 Catalogue Description  
				228 Software Environments (4). Study of the requirements, concepts, and 
				architectures of comprehensive, integrated, software development and 
				maintenance environments. Major topics include process support, object 
				management, communication, interoperability, measurement, analysis, and 
				user interfaces in the environment context.
				  
				 Structure  
				The class will be discussion oriented.  Papers must have been read beforehand
				and discussion will be seeded by critical opinions, questions, and challenges 
				that each student will write on the whiteboard each week at the beginning of
				the discussion.  These discussions will primarily take place on Tuesdays.
				  
				 Project  
				Each student will perform a practical research project.  The research project 
				must result in a tangible technology, the form of which will be discussed in 
				class.  Discussion regarding progress and issues that may arise will take
				place on Thursdays.
				  
				 Grades  
				All students enrolled in the course will earn a letter grade based upon: 
				(a) their demonstrated understanding of the class topic, (b) class attendance 
				and participation, (c) the critical opinions, questions, and challenges shared 
				with the class to seed the discussions, and (d) the class project.
				  
				 Course Mailing List  
				To send mail:  36718-s06@classes.uci.edu  
				To view the archive:  http://eee.uci.edu/toolbox/mla/message_list.php?ccode=36718&amp;quarter=S06 
				  
				 Students with Disabilities  
				Any student who feels he or she may need an accommodation based on the 
				impact of a disability should contact me privately to discuss his or her 
				specific needs.  Also contact the Disability Services Center at 
				(949) 824-7494 as soon as possible to better ensure that such 
				accommodations are implemented in a timely fashion.
				  
				 Copyright  
				The documents below are included to ensure timely dissemination of scholarly
				and technical work on a non-commercial basis and are for the sole use of 
				students enrolled in ICS 228. Copyright and all rights therein are 
				maintained by the authors or by other copyright holders, notwithstanding that 
				they have offered their works here electronically. It is understood that all
				persons copying this information will adhere to the terms and constraints 
				invoked by each author's copyright. These works may not be resposted without
				the explicit permission of the copyright holder.
				  
				 Schedule 
				    
					 Week 
					 
					 
					 Date 
					 
					 
					 Topic 
					 
					 
					 Papers 
					 
				     
					1
					 
					 
					April 4
					 
					 
					Welcome
					 
					 
					 
				     
					 
					 
					April 6
					 
					 
					Introduction to Software Environments
					 
					 
					Rich &amp; Waters:  Automatic Programming: Myths and Prospects  
					Dart, Ellison, Feiler &amp; Habermann:  Overview of Software Development Environments  
					Kadia:  Issues Encountered in Building a Flexible Software Development Environment 					
					 
				     
					2
					 
					 
					April 11
					 
					 
					A Historical Perspective
					 
					 
					Dolotta &amp; Mashey:  An Introduction to the Programmers Workbench  
					Reps &amp; Teitelbaum:  The Synthesizer Generator  
					Teitelman &amp; Masinter:  The Interlisp Programming Environment 
					 
				     
					 
					 
					April 13
					 
					 
					A Historical Perspective
					 
					 
					Swinehart, Zellweger, Beach &amp; Hagmann:  A Structural View of the Cedar Programming Environment  
					Harel, Lachover, Naamad, Pnueli, Politi, Sherman &amp; Shtul-Trauring:  STATEMATE: A Working Environment for the Development of Complex Reactive Systems  
					Taylor, Belz, Clarke, Osterweil, Selby, Wileden, Wolf &amp; Young:  Foundations for the Arcadia Environment Architecture 
					 
				     
					3
					 
					 
					April 18
					 
					 
					Under the Hood
					 
					 
					Tarr &amp; Clarke:  Pleiades: An Object Management System for Software Engineering Environments  
					Anderson, Taylor &amp; Whitehead:  Chimera: Hypermedia for Heterogenous Software Development Environments  
					Heineman &amp; Kaiser:  An architecture for Integrating Concurrency Control into Environment Frameworks 
					 
				     
					 
					 
					April 20
					 
					 
					Under the Hood
					 
					 
					Bandinelli, Di Nitto &amp; Fuggetta:  Supporting Cooperation in the SPADE-1 Environment  
					van der Lingen &amp; van der Hoek:  An Experimental, Pluggable Infrastructure for Modular Configuration Management Policy Composition  
					Nentwich, Emmerich &amp; Finkelstein:  Consistency Management with Repair Actions 
					 
				     
					4
					 
					 
					April 25
					 
					 
					Building Software Environments
					 
					 
					Ballance, Graham &amp; Van de Vanter:  The Pan Language-Based Editing System for Integrated Development Environments  
					Boudier, Gallo, Minot &amp; Thomas:  An Overview of PCTE &amp; PCTE+  
					Ossher &amp; Harrison:  Support for Change in RPDE 3  
					 
				     
					 
					 
					April 27
					 
					 
					Project Introduction
					 
					 
					 
				     
					5
					 
					 
					May 2
					 
					 
					Building Software Environments
					 
					 
					Thomas &amp; Nejmeh:  Definitions of Tool Integration for Environments  
					Clemm &amp; Osterweil:  A Mechanism for Environment Integration  
					Reiss:  Connecting Tools Using Message Passing in the Field Environment 
					 
				     
					 
					 
					May 4
					 
					 
					Project Proposal Due
					 
					 
					 
				     
					6
					 
					 
					May 9
					 
					 
					Modern Software Environments
					 
					 
					Medvidovic, Rosenblum &amp; Taylor:  A Language and Environment for Architecture-Based Software Development and Evolution  
					Grundy, Mugridge &amp; Hosking:  Constructing Component-based Software Engineering Environments: Issues and Experiences  
					des Rivières &amp; Wiegand:  Eclipse: A Platform for Integrating Development Tools 
					 
				     
					 
					 
					May 11
					 
					 
					Project Discussion
					 
					 
					 
				     
					7
					 
					 
					May 16
					 
					 
					Software Environments for Reuse
					 
					 
					Habermann:  Programming Environments for Reuse  
					Braga, Werner &amp; Mattoso:  Odyssey: A Reuse Environment based on Domain Models  
					Lüer &amp; Rosenblum:  Wren—An Environment for Component-Based Development 
					 
				     
					 
					 
					May 18
					 
					 
					Project Discussion
					 
					 
					 
				     
					8
					 
					 
					May 23
					 
					 
					Distributed Software Environments
					 
					 
					Ben-Shaul &amp; Kaiser:  A Paradigm for Decentralized Process Modeling and its Realization in the Oz Environment  
					Augustin, Bressler &amp; Smith:  Accelerating Software Development Through Collaboration  
					Hall, Heimbigner &amp; Wolf:  A Cooperative Approach to Support Deployment Using the Software Dock 
					 
				     
					 
					 
					May 25
					 
					 
					Project Discussion
					 
					 
					 
				     
					9
					 
					 
					May 30
					 
					 
					New Developments
					  
					Zimmermann, Weißgerber, Diehl &amp; Zeller:  Mining Version Histories to Guide Software Change  
					Mockus &amp; Herbsleb:  Expertise Browser: A Quantitative Approach to Identifying Expertise  
					Cubranic, Murphy, Singer &amp; Booth:  Hipikat: A Project Memory for Software Development 
					 
				     
					 
					 
					June 1
					 
					 
					Preliminary Project Demonstrations
					 
					 
					 
				     
					10
					 
					 
					June 6
					 
					 
					New Developments
					 
					 
					Henkel &amp; Diwan:  CatchUp! Capturing and Replaying Refactorings to Support API Evolution  
					Ducasse &amp; Lanza:  The Class Blueprint: Visually Supporting the Understanding of Classes  
					Van der Westhuizen, Chen &amp; van der Hoek:  Emerging Design: New Roles and Uses for Abstraction 
					 
				     
					 
					 
					June 8
					 
					 
					Project Discussion
					 
					 
					 
				     
					Finals week
					 
					 
					June 13, 10:30 - 12:30
					 
					 
					Final Project Demonstrations
					 
					 
					 
				     
			     
		     
        	     
		   
			   
         
 			   
                 
                  
	 	         
		         
           
     
		       
			   
         
       	       
		        contact
	 	         
		           
				email  andre@ics.uci.edu   
				skype  awvanderhoek   
				aim  AW van der Hoek 
	 	         
		         
           
     
		     


	     
    </body> 