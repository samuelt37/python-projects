 //
// NFATransition.cpp: implementation of the NFATransition class.
//
//  Copyright (C) 2004 - 2007 by The Regents of the University of
//  California
//
// Redistribution of this file is permitted under the terms of the GNU
// Public License (GPL).
//
// Date: October, 2004
//
// Author: 
//          Liang Jin (liangj@ics.uci.edu)
//

#include "stdafx.h"
#include "NFATransition.h"
#include 
#include 
#include "parameters.h"


//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////


NFATransition::NFATransition (char label[], NFANode* outNode)
{
	//this.labels = new char[2];
    this-&gt;labels[0] = label[0];
    this-&gt;labels[1] = label[1];
	this-&gt;outNode = outNode;
}

NFATransition::NFATransition (char label[], NFANode* outNode, NFANode* fromNode)
{
    //this.labels = new char[2];
    this-&gt;labels[0] = label[0];
    this-&gt;labels[1] = label[1];
	this-&gt;outNode = outNode;
    this-&gt;fromNode = fromNode;
}
       
NFATransition::NFATransition (NFANode* toNode, NFANode* fromNode)
{
	//this.labels = new char[2];
	this-&gt;outNode = toNode;
    this-&gt;fromNode = fromNode;
}

NFATransition::~NFATransition()
{

}


void NFATransition::setLabels(char labels[])
{
    this-&gt;labels[0] = labels[0];
    this-&gt;labels[1] = labels[1];
}


char* NFATransition::getLabels()
{
    return labels;
}


void NFATransition::printMe(int type){
    string part1;
    string part2;
    if(type==TO){
		part1 = fromNode-&gt;nodeNumber + " --[";
        part2 = "]-&gt; "+outNode-&gt;nodeNumber;
    }
    else if(type==BACK){
        part1 = outNode-&gt;nodeNumber+" nodeNumber;
    }
    else if(type == DOWN){
        part1 = fromNode-&gt;nodeNumber+" \\--[";
        part2 = "]--&gt; "+outNode-&gt;nodeNumber;
    }
    else if(type == UP){
        part1 = outNode-&gt;nodeNumber+" nodeNumber;
    }
    cout  