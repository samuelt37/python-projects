 ICS 32 Winter 2017, Schedule<body>

 

 
ICS 32 Winter 2017 |
 News  |
 Course Reference  |
 Schedule  |
 Project Guide  |
 Notes and Examples  |
 About Alex 
 

  

 

 ICS 32 Winter 2017 
   Schedule 

 

 

  In lieu of a course textbook, assigned readings are mainly the  Notes and Examples  from lecture, which I'll try to keep posted ahead of where we are in lecture at any given time.  It is a good idea to skim the assigned reading  before  the lecture for the main ideas, attend lecture, and then to go through the assigned reading again to fill in the details that you missed, both in your initial skim of the reading and in the lecture. 

   Date 
     Lecture Topics 
     Readings 
     Project Work 
       Week 1 
     Tu 1/10 
     
        Course introduction 
         What are software libraries? 
         The value of abstraction 
         Designing and writing larger programs 
        
     
         Course Reference  
         Front page of  Project Guide  
          N: Course Introduction  
        
     
     
     Th 1/12 
     
        Files, revisited 
         Exceptions and exception handling 
          try  statements 
          try ,  except ,  else , and  finally  clauses in  try  statements 
        
     
         N: Exceptions and Files  
        
     
         
     F 1/13 
      
      
     
         Lab sections begin meeting today  
         Complete  Assignment #0  by the end of lab today 
         Choose a partner for  Project #1  today 
         Start  Project #1  in lab today 
        
     Week 2 
     M 1/16 
     
         University Holiday: Martin Luther King Jr. Day — NO LABS TODAY  
        
      
      
     Tu 1/17 
     
        Higher-level file access 
         File systems and related modules in Python's standard library 
         Paths 
         Recursive data structures 
         File systems as a recursive data structure 
         Recursive functions 
         When recursion is — and is not — appropriate in Python 
        
     
         N: Paths and File Systems  
          N: Recursion  
        
     
     
     Th 1/19 
     
        Overview of computer networks (briefly) 
         Network input and output 
         Some necessary background on how the Internet works 
         IP addresses, ports, packets, routers, etc. 
         Sockets 
         A socket's input and output streams 
         Servers and clients 
         Using sockets in Python 
         Bytes vs. strings 
         String encodings (e.g., UTF-8) (briefly) 
        
     
         N: Networks and Sockets 1    
      
    
     
     
     Week 3 
     M 1/23 
     
         
     
         
     
        Choose a new partner for  Project #2  today 
          Project #1  due 11:59pm 
        
     Tu 1/24 
     
        An example Python socket "echo" client 
         Using "pseudo-file" objects to treat socket input/output as text 
         Revisiting the value of splitting complex functions into shorter, simpler ones 
        
     
         N: Networks and Sockets 2  
        
     
     
     Th 1/26 
     
        Modules and the  import  statement 
         Network protocols 
         The importance of knowing who and what to trust 
         Public and private functions in a module 
         Implementing a simple, custom protocol in Python 
        
     
         N: Modules  
          N: Protocols  
        
     
     
     Week 4 
     Tu 1/31 
     
        Implementing a simple, custom protocol in Python (continued) 
         Namespaces and name resolution (briefly) 
         More details about  import  and multiple modules 
         Naming conventions for modules 
        
     
         N: Modules  
          N: Protocols  
        
     
     
     Th 2/2 
     
        Why namedtuples are a limited way to create new kinds of objects 
         Classes 
         Objects and their attributes 
         Constructors, initialization, methods, and the  self  parameter 
         The difference between method calls and function calls 
         Why we specify some parts of a class as public and others as private 
         Naming conventions for classes 
        
     
         N: Classes  
        
     
     
     Week 5 
     M 2/6 
     
         
     
         
     
         Project #2  due 11:59pm 
        
     Tu 2/7 
     
        Pushing out the boundaries even further: the web 
         URLs 
         HTTP 
         GET requests 
         Writing a Python program that downloads a web page given its URL 
        
     
         N: URLs and HTTP  
        
     
     
     Th 2/9 
     
        Why standards are so important on the Internet 
         Why HTTP is for more than just web browsers 
         Web APIs 
         URLs with query parameters 
         URL encoding (briefly) 
         JSON (JavaScript Object Notation), and why it matters even if you're not writing JavaScript 
         Using Python's standard library to access web APIs 
        
     
         N: Web APIs  
        
     
     
     Week 6 
     Tu 2/14 
     
         MIDTERM: regular time and location  
         Note: You  must  attend the Midterm in the lecture in which you're  officially enrolled  
        
     
         
     
     
     Th 2/16 
     
        More about classes 
         Duck typing 
         Interfaces 
         Consistently designing multiple similar classes 
         Using objects of multiple similar classes without explicitly knowing their types 
        
     
         N: Duck Typing and Interfaces  
        
     
     
     Week 7 
     M 2/20 
     
         University Holiday: Presidents' Day — NO LABS TODAY  
        
      
      
     Tu 2/21 
     
         
     
         
     
     
     W 2/22 
     
         
     
         
     
         Project #3  due 11:59pm 
        
     Th 2/23 
     
         
     
         
     
     
     Week 8 
     Tu 2/28 
     
         
     
         
     
     
     Th 3/2 
     
         
     
         
     
     
     Week 9 
     Tu 3/7 
     
         
     
         
     
     
     Th 3/9 
     
         
     
         
     
     
     Week 10 
     Tu 3/14 
     
         
     
         
     
     
     Th 3/16 
     
         
     
         
     
     
     Finals Week 
     Tu 3/21 
     
         FINAL EXAM (Lecture B): 7:00pm-9:00pm, SSLH 100  
         Note: You  must  attend the Final Exam in the lecture in which you're  officially enrolled  
        
      
      
     Th 3/23 
     
         FINAL EXAM (Lecture A): 4:00pm-6:00pm, SSLH 100  
         Note: You  must  attend the Final Exam in the lecture in which you're  officially enrolled  
        
      
      
     

</body> 