  "-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;

 
UCI Machine Learning Repository: Chess (Domain Theories) Data Set   
		                Center for Machine Learning and Intelligent Systems   
	 
	 
		 
		 About  
		 Citation Policy  
		 Donate a Data Set  
		 Contact 
		 

		  
		   Repository  
		  Web  
		          
		   
		 
		


		    View 
ALL Data Sets    
		  
      

      
	 
	  Chess (Domain Theories) Data Set  
	    Download  :   Data Folder  ,   Data Set Description    

	  Abstract : 6 different domain theories for generating legal moves of chess 
      
        
          Data Set Characteristics:     
		  Domain-Theory  
		   Number of Instances:   
		  N/A  
		   Area:   
		  Game  
	     Attribute Characteristics:   
		  N/A  
		   Number of Attributes:   
		  N/A  
		   Date Donated   
		  N/A  
	     Associated Tasks:   
		  N/A  
		   Missing Values?   
		  N/A  
		   Number of Web Hits:   
		  30432  
	     Source:  
 1. "chess_flann_new" and "chess_flann_wyl" written by  flann  '@'  cs.orst.edu   2. "chess_russel_wyl" originally written by Stuart Russell in MRS, then translated into prolog by  flann  '@'  cs.orst.edu   3. "chess_vijay_1", "chess_vijay_2" and "chess_vijay_3" written by  vijay  '@'  cs.orst.edu  

   Data Set Information:  
 The six encoding are briefly described below:  1) chess_flann_new: Written by  flann  '@'  cs.orst.edu.  Employs a geometric representation for states, with each square designated by an X,Y coordinate and square connectivity computed by vectors. Generates legal moves by first generating peusdo moves then eliminating those that result in the moving player being in check.  2) chess_flann_wyl: Written by  flann  '@'  cs.orst.edu.  Employs a relational representation for states, with each square given a unique name and square connectivity computed by an enumeration of connected relations. Generates legal moves by first generating peusdo moves then eliminating those that result in the moving player being in check.  3) chess_russell_wyl: Originally written by Stuart Russell in MRS, translated into prolog by  flann  '@'  cs.orst.edu.  Employs a geometric representation for states, with each square designated by an X,Y coordinate and square connectivity computed by vectors. Generates legal moves by determining whether the moving side is in check. If the moving side is in check, moves are generated that destroy the check threat. If the moving side is not in check, moves are generated that do not create a check threat. Note that if the moving side is in check from multiple threats then the domain theory generates incorrect moves.  4) chess_vijay_1: Written by  vijay  '@'  cs.orst.edu.  Employs a relational representation for states, with each square given a unique name and square connectivity computed by an enumeration of connected relations. Generates legal moves by first generating peusdo moves then eliminating those that result in the moving player being in check.  5) chess_vijay_2: Written by  vijay  '@'  cs.orst.edu.  Employs a geometric representation for states, with each square designated by an X,Y coordinate and square connectivity computed by vectors. Generates legal moves by first generating peusdo moves then eliminating those that result in the moving player being in check.  6) chess_vijay_3: Written by  vijay  '@'  cs.orst.edu.  Employs a special linear representation for states, with each square designated by a single number and square connectivity computed by a single delta value. Generates legal moves by first generating peusdo moves then eliminating those that result in the moving player being in check.  Each domain theory includes a sample state called state1 that describes the board position illustrated as Figure 4(d) in Flann and Dietterich, "A study of explanation-based methods for inductive learning" in Machine Learning, 4 187-226. See file test_domain_theories for an example of loading and running the domain theories.  In addition to the domain theories, a file called support_code is included that contains some useful prolog routines. One routine takes a generic chess board description and a domain theory name, and produces a prolog state description suitable for use with the given domain theory. See file test_domain_theories for an example of generating state descriptions. 

   Attribute Information:  
 N/A 

   Relevant Papers:  
 Flann and Dietterich, "A study of explanation-based methods for inductive learning", Machine Learning, 4 187-226.   [Web Link]  

   Papers That Cite This Data Set 1 :  
  Mark A. Hall.  Department of Computer Science Hamilton, NewZealand Correlation-based Feature Selection for Machine Learning . Doctor of Philosophy at The University of Waikato. 1999.  [ View Context ].   

   Citation Request:  
 Please refer to the Machine Learning 
Repository's  citation policy  

      [1] Papers were automatically harvested and associated with this data set, in collaboration 
with   Rexa.info    

    Supported By:  
           
           In Collaboration With:  
           
   
 
 About   || 
 Citation Policy   || 
 Donation Policy   || 
 Contact   || 
 CML 
 
 





 