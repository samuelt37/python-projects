 Python: module modular<body>

           modular</strong>       index   c:\users\pattis\workspace\courselib\modular.py       
 
         Classes</strong>                  
     builtins.object 
   
    Modular 
    
  
        class  Modular</strong> ( builtins.object )           
  Models a modular number (value and modulus) 
Standard arithmetic operators are overloaded: + - * /         
 Methods defined here:     __add__</strong> (self, other)   Overload addition operator: +       __bool__</strong> (self)   Determine the truth of a  Modular  value: non-0 values are True       __eq__</strong> (self, other)   Overload equal operator: ==       __ge__</strong> (self, other)   Overload greater than or equal to operator: &gt;       __gt__</strong> (self, other)   Overload greater than operator: &gt;       __init__</strong> (self, value, modulus)   Instantiate like  Modular (3,4)       __le__</strong> (self, other)   Overload less than or equal to operator: &lt;=       __lt__</strong> (self, other)   Overload less than operator: &lt;       __mul__</strong> (self, other)   Overload multiplication operator: *       __ne__</strong> (self, other)   Overload not equal operator: !=       __pow__</strong> (self, other)   Overload power operator: *       __radd__</strong> (self, other)   Overload addition operator (for right operands): +       __rmul__</strong> (self, other)   Overload multiplication operator (for right operands): *       __rpow__</strong> (self, other)   Overload power operator: *       __rsub__</strong> (self, other)   Overload subtraction operator (for right operands): -       __str__</strong> (self)   Return a string representation for a  Modular , such that 
m2 = eval(str(m1)) copies the state of m1 at the time of the call       __sub__</strong> (self, other)   Overload subtraction operator: -       clear</strong> (self)   Decrement value (modularly) by 1       dec</strong> (self)   Decrement value (modularly) by 1       inc</strong> (self)   Increment value (modularly) by 1       modulus</strong> (self)   returns modulus of modular number       value</strong> (self)   returns current value of modular number    
Data descriptors defined here:    __dict__</strong> 
  dictionary for instance variables (if defined)  
    __weakref__</strong> 
  list of weak references to the object (if defined)  
  
Data and other attributes defined here:    __hash__</strong> = None        </body> 