 Informatics 102 Spring 2012, Assignment #0: Getting Yourself Set Up<body>

 

 
Informatics 102 Spring 2012 |
 News  |
 Course Reference  |
 Schedule  |
 Lab Manual  |
 Code Examples  |
 About Alex 
 

  

 

 Informatics 102 Spring 2012 
   Assignment #0:  Getting Yourself Set Up  
   
 

 

  Due date and time:   Thursday, April 5, 5:00pm  

 

 

  Introduction 

 This assignment takes you through the steps of installing and configuring some of the necessary software that you'll need for your work this quarter.  The software that you'll install for this assignment will not be everything you'll need for the duration of this quarter, but it will be enough to get you started.  When subsequent assignments require additional software, instructions on installing and configuring it will be provided, though those instructions will assume that you've completed this assignment already. 

 Note that you may have some of the software described here already installed.  I would strongly suggest a re-installation of the latest versions described here, to be sure that you're using the same versions that everyone else (including me and the grader of the assignments) will be using. 

 If you're not planning to do any work on your own machine, but instead plan to use only the machines in the ICS labs, you can safely skip to Step 3, as the ICS labs have the software described in the first two steps. 

 

 

  Step 1: Installing the Java SE Development Kit (JDK) 

 (You can safely skip this step if you're working in the ICS labs.) 

 The first thing to install is the Java SE Development Kit (JDK), which is a required component for developing Java programs.  The latest version, as of this writing, is JDK 7 Update 3, which can be downloaded for Windows, Linux, and Solaris from  Oracle .  JDK 7 is not yet available officially for Mac, but there is a separately-developed version of JDK 6 for Mac OS X, which may already be installed on your machine if you're running Mac OS X 10.5; you'll want to check that you have the latest version installed and, if not, install it. 

 For those of you running Windows or Mac OS X, I have a "setting up Java" document that details what you'll need to know to get set up when the latest version of JDK, which is available at  this link .  Those of you who are running Linux, Solaris, or something else are, sadly, on your own, though there is ample documentation available on the web. 

 Note that, even if you already have Java installed on your machine, now is a good time to upgrade to the latest version, so that if we use anything that requires it, you'll be prepared.  If you can run Java 7, do it; if not, nothing we do this quarter will specifically require it. 

 

 

  Step 2: Downloading and Installing Eclipse Classic 3.7.2 

 (You can safely skip this step if you're working in the ICS labs.) 

 Downloading Eclipse Classic 3.7.2 

 This quarter, when we work in Java — or other languages in the Java ecosystem, such as AspectJ — we'll be using Eclipse Classic 3.7.2, one of the distributions of the Eclipse project.  Eclipse requires you to have already installed the JDK (or a smaller package called the JRE, which lacks some tools that we might find useful as we go forward); if you're not sure whether you have the most recent version of Java, see Step 1. 

 Eclipse Classic 3.7.2 is available at  this link ; it's the last one in the list.  (Even though we'll be doing Java development, do not download "Eclipse IDE for Java Developers" or "Eclipse IDE for Java EE Developers.") 

 Installing Eclipse Classic 3.7.2 

 Eclipse is distributed as a compressed archive containing a pre-installed version of the program, with no installation or setup program.  Installation is as simple as extracting the archive (a .zip file on Windows, a .tar.gz file on Mac OS X and Linux) wherever you want it (I suggest  C:\eclipse  on Windows or your  Applications  folder on Mac OS X).  On Windows, you'll also probably want to create a shortcut to  C:\eclipse\eclipse.exe  and put it on your desktop.  On Mac OS X, you'll probably also want to drag the Eclipse application into your Dock. 

 

 

  Step 3: Downloading the Informatics 102 Eclipse workspace 

 The purpose of a workspace 

 One of the helpful features of Eclipse is how it helps you to organize your work, on one project or many, easily.  It also gives you the ability to tweak a wide variety of settings, such as the version of Java that should be used to compile your programs, the fonts and colors displayed in the editor, the style of the code that Eclipse generates for you, and so on.  A  workspace  is the repository for all of the files that make up your projects and all of your settings. 

 A workspace is stored within a single folder.  When you start Eclipse, you select the folder containing the workspace that you'd like to use.  I suggest using a single workspace for all of your work this quarter, as it will give you easy access to all of your previous work, as well as maintain your settings from one assignment to the next. 

 Downloading and installing the Informatics 102 Eclipse workspace 

 Eclipse provides a large set of options that you can configure to alter Eclipse's default behavior.  The default settings aren't entirely appropriate for this course, so I've set up an empty workspace configured for you to use when doing your work in this course.  This ensures that you'll be using the same settings as us, which will be especially important when it comes time for us to grade your programs. 

 The "official" Informatics 102 Eclipse workspace is available at the link below: 

   Informatics 102 Eclipse workspace  
  The workspace is provided in zip format; to use it, unzip it to a folder in a place you'll be able to find again.  A good place to put it when working the ICS labs is on a USB memory stick or other portable media, so that it will be available to you regardless of what machine you're using.  (Be sure to keep a backup, in case you lose your memory stick or it ceases to function.) 

 (Note to Mac users who intend to use Eclipse on their own machines: the zip archive may appear empty, because its only contents are a folder called  .metadata .  Files and folders whose named begin with a "." character are hidden in Mac OS X by default.  Go ahead and unzip the archive anyway.) 

 Starting up Eclipse with your Informatics 102 Eclipse workspace 

 Once you've downloaded and unzipped your Informatics 102 Eclipse workspace, start up Eclipse.  Be sure to select your Informatics 102 Eclipse workspace when you start Eclipse, so that you'll be properly configured from the get-go. 

 

 

  Step 4: Installing the AspectJ Development Tools (AJDT) for Eclipse 

 (Note: The machines in the ICS labs have Eclipse Classic, but do not have the AspectJ Development Tools plug-in installed, so you may need to do this each time you sit down at a machine that hasn't been used by someone in Informatics 102.) 

 The first programming assignment will require you to use a programming language called AspectJ, which is an extension of Java that adds support for a programming paradigm called  aspect-oriented programming .  Eclipse does not support AspectJ by default, but there is a "plug-in" available, called  The AspectJ Development Tools (AJDT)  that adds AspectJ support to Eclipse. 

 Eclipse plug-ins can be installed from directly within Eclipse, so it is not necessary to download the plug-in separately.  To install the AJDT plug-in, start up Eclipse, if you haven't already, then follow these steps: 

  From the  Help  menu, select  Install New Software... . 
   A dialog titled  Available Software  will pop up. 
   Click the  Add Site...  button along the right-hand side of the dialog. 
   Next to the label  Work with:  is a field in which you can enter the URL of an Eclipse plug-in repository.  Paste this address into that field:  http://download.eclipse.org/tools/ajdt/37/update . 
   Give your new repository a name (e.g.,  AJDT for Eclipse 3.7 ) and click  OK  to dismiss the  Add Site  dialog.  The contents of your new repository will be displayed in a list below where you entered the URL. 
   Check the box next to  AspectJ Development Tools (Required)  in the list. 
   Click the  Next  button in the lower right. 
   You'll then be prompted with a dialog asking you to "review the items to be installed."  Click  Next  to confirm. 
   Next, you'll be asked to accept a license agreement.  It's up to you whether you want to read it, but you will need to accept it and click  Finish  in order to install the plug-in. 
   The installation will proceed, which may take a little time.  During that process, you may be given a security warning that "You are installing software that contains unsigned content."  Click  OK  to continue with the installation anyway. 
   Finally, you'll be recommended to restart the Eclipse SDK so that the changes can take effect.  Click  Restart Now  to restart Eclipse. 
  You're now ready to use AspectJ within Eclipse, which we'll be using in lecture for the next couple of weeks, as well as on the first assignment. 

 

 

  Deliverables 

 This assignment has no deliverables and is not worth any credit.  That said, it is strongly recommended that you follow the instructions.  Completing this assignment should not require more than an hour or so of your time, but you will find that it is well worth it to get it done now, before deadline pressures and other coursework begin to make spending this kind of time more frustrating. 

 

 

   Updated for clarification and for new versions of software by Alex Thornton, Spring 2012. 
   Updated for new versions of software by Alex Thornton, Winter 2010. 
   Originally written by Alex Thornton, Winter 2009. 
  

</body> 