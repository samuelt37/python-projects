 17.1 Substructure Search<body>
 
       
     
        
 OEChem - C++ Theory Manual
 
Version 1.3.1      
     
   
   
   Previous:   17. Pattern Matching 
 Up:   17. Pattern Matching 
 Next:   17.2 Maximum Common Substructure 
   


  
17.1 Substructure Search 
 

 
Substructure searches can be done in OEChem using the
 OESubsearch  class.  The  OESubSearch  class can be
initialized with a SMARTS pattern, a query molecule  OEQMolBase ,
or a molecule and expression options.  The following example
demonstrates how to initialize a  OESubSearch  instance with a
SMARTS pattern, and perform a substructure search.

  
    #include "oechem.h"
#include &lt;iostream&gt;

using namespace std;
using namespace OEChem;

int main()
{
  OEGraphMol mol;

  OEParseSmiles(mol, "Cc1ccccc1");
  OESubSearch ss("c1ccccc1");

  if (ss.SingleMatch(mol))
  {
    cout &lt;&lt; "benzene matches toluene" &lt;&lt; endl;
  }
  else
  {
    cout &lt;&lt; "benzene does not match toluene" &lt;&lt; endl;
  }

  return 0;
}
 
 
 Download as text. 
 
   
In the example program, the query pattern is benzene and the molecule
in which the substructure is being searched for is toluene.  Since
benzene is a substructure of toluene the program will identify the
substructure, and report the substructure as found.

  
The  OESubSearch  class is not only able to identify the presence
or absence of a substructure, but also the node and edge
correspondences of the pattern and target.  The following example
extends the simple match example to write out all atom correspondences
between benzene and toluene.

  
    #include "oechem.h"
#include &lt;iostream&gt;

using namespace std;
using namespace OEChem;
using namespace OESystem;

int main()
{
  OEGraphMol mol;

  OEParseSmiles(mol, "c1ccccc1C");
  OESubSearch ss("c1ccccc1");

  unsigned int count;
  OEIter&lt;OEMatchBase&gt; match;
  for (count=1,match = ss.Match(mol);match;++match,count++)
  {
    OEIter&lt;OEMatchPair&lt;OEAtomBase&gt; &gt; apr;

    cout &lt;&lt; "Match " &lt;&lt; count &lt;&lt; ':' &lt;&lt; endl;
    cout &lt;&lt; "pattern atoms: ";
    for (apr = match-&gt;GetAtoms();apr;++apr)
      cout &lt;&lt; apr-&gt;pattern-&gt;GetIdx() &lt;&lt; ' ';
    cout &lt;&lt; endl;

    cout &lt;&lt; "target atoms:  ";
    for (apr = match-&gt;GetAtoms();apr;++apr)
      cout &lt;&lt; apr-&gt;target-&gt;GetIdx() &lt;&lt; ' ';
    cout &lt;&lt; endl;
  }

  return 0;
}
 
 
 Download as text. 
 
   
The  OESubSearch::Match  method returns an iterator over all
subgraphs.  Each of the subgraphs can be queried for their node and
edge correspondences.  In this particular example, the benzene
substructure is identified twelve times in toluene.  Each of the
matches differ in their node and edge correspondences to the
substructure..

  

  
          
     
        
 OEChem - C++ Theory Manual
 
Version 1.3.1      
     
   
   
   Previous:   17. Pattern Matching 
 Up:   17. Pattern Matching 
 Next:   17.2 Maximum Common Substructure 
  Documentation released on July 30, 2004. 
 


</body> 