 Git tutorial - CS Theory Wiki 
 
  
  


 
    
    

  
  
  
   
    
    


  Differences  
 

 

This shows you the differences between two versions of the page.
 

 
       
     wiki:git_tutorial [Thu Feb 28 03:42:27 2013]   michael       
     
     wiki:git_tutorial [Mon Oct 20 21:31:52 2014]  (current)  jenny       
       Line 1: 
 Line 1:       ====== Git tutorial ======     ====== Git tutorial ======    -   Under construction FIXME</strong>  +   On this page you will information on we have been using [[wikipedia&gt;git_(software)|git]] to manage our papers.</strong>                   ===== Setting up git =====      ===== Setting up git =====     Line 13: 
 Line 13:                   ==== Ignoring files ====     ==== Ignoring files ====    -   FIXME</strong>  +   Some files you never want in your repository. This includes LaTeX auxiliary files, pdf files compiled from TeX sources, and operating system trash. You can activate a global ignore file with the command </strong>       +   &lt;code bash&gt; </strong>       +   git config --global core.excludesfile "~/.gitignore_global" </strong>       +   &lt;/code&gt; </strong>       +   If you are using OS X, then you may have a global ignore file that looks like </strong>       +   &lt;code - .gitignore_global&gt; </strong>       +   .DS_Store </strong>       +   .AppleDouble </strong>       +   .LSOverride </strong>       +   Icon </strong>       +   ._* </strong>       +   .Spotlight-V100 </strong>       +   .Trashes </strong>       +   &lt;/code&gt; </strong>       +   And, if you are using Windows, then you may have a global ignore file that looks like </strong>       +   &lt;code - .gitignore_global&gt; </strong>       +   Thumbs.db </strong>       +   ehthumbs.db </strong>       +   Desktop.ini </strong>       +   $RECYCLE.BIN/ </strong>       +   &lt;/code&gt; </strong>       +   The problem with using global ignore file is that it requires all of your coauthors to have setup a global ignore file. If they have not you will still end up with crud in your repository. For this reason a better solution is a per repository ignore file. If you add file with name ''.gitignore'' to the top level of your repository, then all files matching the patterns in this file will be ignored. A good general purpose ignore file for LaTeX documents is </strong>       +   &lt;code - .gitignore&gt; </strong>       +   paper.pdf </strong>       +    </strong>       +   ##### LaTeX Files ##### </strong>       +   *.aux </strong>       +   *.bbl </strong>       +   *.blg </strong>       +   *.dvi </strong>       +   *.fdb_latexmk </strong>       +   *.glg </strong>       +   *.glo </strong>       +   *.gls </strong>       +   *.idx </strong>       +   *.ilg </strong>       +   *.ind </strong>       +   *.ist </strong>       +   *.lof </strong>       +   *.log </strong>       +   *.lot </strong>       +   *.nav </strong>       +   *.nlo </strong>       +   *.out </strong>       +   *.pdfsync </strong>       +   *.ps </strong>       +   *.snm </strong>       +   *.synctex.gz </strong>       +   *.toc </strong>       +   *.vrb </strong>       +   *.maf </strong>       +   *.mtc </strong>       +   *.mtc0 </strong>       +    </strong>       +   ##### OS X Files ##### </strong>       +   .DS_Store </strong>       +   .AppleDouble </strong>       +   .LSOverride </strong>       +   Icon </strong>       +   ._* </strong>       +   .Spotlight-V100 </strong>       +   .Trashes </strong>       +    </strong>       +   ##### Windows Files ##### </strong>       +   Thumbs.db </strong>       +   ehthumbs.db </strong>       +   Desktop.ini </strong>       +   $RECYCLE.BIN/ </strong>       +   &lt;/code&gt; </strong>       +   The top line of this file should be changed to match the output of pdflatex.</strong>                   ===== Git workflow =====     ===== Git workflow =====    Line 58: 
 Line 127:                   ==== Add-commit workflow ====     ==== Add-commit workflow ====       +  FIXME                   ==== Fetch-merge workflow ====     ==== Fetch-merge workflow ====       +  FIXME       +  ==== Merge conflicts ====       +  FIXME                   ===== I've made a huge mistake... =====     ===== I've made a huge mistake... =====       +  FIXME                   ===== Best practices =====     ===== Best practices =====                   ==== Tagging versions ====     ==== Tagging versions ====       +   It is generally a good idea to tag milestones in your project. For a paper an obvious milestone is submission to a conference. For a paper being submitted to WADS 2013 we would tag the submitted version with the following command.</strong>       &lt;code bash&gt;     &lt;code bash&gt;       git tag WADS2013-submission     git tag WADS2013-submission       &lt;/code&gt;     &lt;/code&gt;    -     +   For an arXiv upload we would use </strong>    -  To  move a </strong>tag you  do </strong>the  same thing</strong>,  but </strong>you need to  for </strong>the tag to move with -f  +   &lt;code bash&gt; </strong>       +   git tag arxiv-1308.5741v1 </strong>       +   &lt;/code&gt; </strong>       +   including both the arxiv identifier for the paper and the arxiv version of the upload.</strong>        +  To  push this </strong>tag  so that your coauthors have access to it </strong>you  use </strong>the  command: </strong>       +   &lt;code bash&gt; </strong>       +   git push --tags </strong>       +   &lt;/code&gt; </strong>       +   When you notice that there was an error in your submission and you need to resubmit</strong>,  you can move the tag. To do this </strong>you need to  force </strong>the tag to move with  ''</strong>-f '' flag.</strong>       &lt;code bash&gt;     &lt;code bash&gt;       git tag WADS2013-submission -f     git tag WADS2013-submission -f    Line 79: 
 Line 161:                   ==== What repositories do I have access to? ====     ==== What repositories do I have access to? ====       +  To find out which papers you have access to on our version control server you can use the following command.       &lt;code bash&gt;     &lt;code bash&gt;       ssh -T git@redwood.ics.uci.edu     ssh -T git@redwood.ics.uci.edu       +  &lt;/code&gt;       +         +  ==== Pretty colors ====       +  FIXME       +         +  ==== Aliases ====       +  FIXME       +         +  ==== A better log ====       +  One-time set up of your git configuration, typing at command line       +  &lt;code&gt;       +  git config --global alias.lg "log --pretty=format:\"%Cred%an %Cgreen%ar, %h%n%Cblue  %s%d\""       +  &lt;/code&gt;       +  And then from that point on       +  &lt;code&gt;       +  git lg       &lt;/code&gt;     &lt;/code&gt;                Line 90: 
 Line 189:         * [[http://www.gitimmersion.com|Git Immersion]]: A general git tutorial.       * [[http://www.gitimmersion.com|Git Immersion]]: A general git tutorial.         * [[http://http://git-scm.com/book|Pro Git]]: An online book on git.       * [[http://http://git-scm.com/book|Pro Git]]: An online book on git.       +    * [[http://rypress.com/tutorials/git/index.html|Ry's Git Tutorial]]: Another good online tutorial.         * [[http://git.or.cz/course/svn.html|Git - SVN Crash Course]]: Compares git with subversion       * [[http://git.or.cz/course/svn.html|Git - SVN Crash Course]]: Compares git with subversion         * [[https://www.sharelatex.com/blog/2012/10/16/collaborating-with-latex-and-git.html|Collaborating with LaTeX and git]]: Blog post.       * [[https://www.sharelatex.com/blog/2012/10/16/collaborating-with-latex-and-git.html|Collaborating with LaTeX and git]]: Blog post.         * [[http://stackoverflow.com/questions/6188780/git-latex-workflow/6190412#6190412|git + LaTeX workflow]]: A stackoverflow post.       * [[http://stackoverflow.com/questions/6188780/git-latex-workflow/6190412#6190412|git + LaTeX workflow]]: A stackoverflow post.     
   
  

  
    
     Trace: 
    

 




 
  
   
       Login  
      

  
   
     
          Article   
        
   
  

  
   
     
          Read   
           Show pagesource   
           Old revisions   
        
     
       
         Search 
       
      
         
          
         
          
      
     
   
  

 



 
  
   
        
   
  

  
   
     Navigation 
     
       

 
 Main page 
 

 
 Orphan pages 

 

       
     
   
   
     Print/export 
     
       
         Printable version  
        
     
   
   
     Toolbox 
     
       
         What links here  
          Recent changes  
          Upload file  
          Site index  
          Permanent link  
          Cite this page  
        
     
   


 

 



 
    
      wiki/git_tutorial.1362022947.txt.gz · Last modified: Thu Feb 28 03:42:27 2013 by michael  
         
         
         
         
         
         
     
     
 

      DokuWiki Appliance  - Powered by  TurnKey Linux     </body> 