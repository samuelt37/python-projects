 System Initiation/Planning: where do systems come from<body>
      
   System Initiation/Planning:   where do systems 
come from? In most situations, new feasible systems replace or supplement 
existing information processing mechanisms whether they were previously automated, 
manual, or informal.  
      
   Requirement Analysis and Specification:   identifies 
the problems a new software system is suppose to solve, its operational capabilities, 
its desired performance characteristics, and the resource infrastructure needed
to support system operation and maintenance.  
      
   Functional Specification or Prototyping   :  identifies and potentially formalizes the objects of computation, 
their attributes and relationships, the operations that transform these objects, 
the constraints that restrict system behavior, and so forth.  
      
   Partition and Selection   (Build vs. Buy vs. 
Reuse): given requirements and functional specifications, divide the system 
into manageable pieces that denote logical subsystems, then determine whether 
new, existing, or reusable software systems correspond to the needed pieces. 
 
      
   Architectural Design and Configuration Specification  : 
defines the interconnection and resource interfaces between system subsystems, 
components, and modules in ways suitable for their detailed design and overall 
configuration management.  
      
   Detailed Component Design Specification   :  defines the procedural methods through which the data resources
within the modules of a component are transformed from required inputs into
provided outputs.  
      
   Component Implementation and Debugging   :  codifies the preceding specifications into operational 
source code implementations and validates their basic operation.  
      
   Software Integration and  Testing    :  affirms and sustains the overall integrity of the software 
system architectural configuration through verifying the consistency and completeness
of implemented modules, verifying the resource interfaces and interconnections
against their specifications, and validating the performance of the system
and subsystems against their requirements.  
      
   Documentation Revision and System Delivery   :  packaging and rationalizing recorded system development 
descriptions into systematic documents and user guides, all in a form suitable 
for dissemination and system support.  
      
   Deployment and Installation   :  providing directions for installing the delivered software 
into the local computing   
 
 environment, configuring operating systems parameters and user access privileges,
and running diagnostic test cases to assure the viability of basic system
operation.  
      
   Training and Us   e : providing 
system users with instructional aids and guidance for understanding the system's 
capabilities and limits in order to effectively use the system.  
      
   Software Maintenance   :  
sustaining the useful operation of a system in its host/target environment 
by providing requested functional enhancements, repairs, performance improvements, 
and conversions.  
   </body> 