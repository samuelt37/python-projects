 ICS 260 - Fundamentals of the Design and Analysis of
Algorithms<body>
 ICS 260 - Fundamentals of the Design and Analysis of Algorithms
- Fall, 2002 (Eppstein) 

  Instructor:  David Eppstein, CS 358D, 949-824-6384,  eppstein@ics.uci.edu . 
Office hours by appointment; call or send email to set up a time. I
will usually be available immediately after class. 

  Class meeting:   
Tuesdays and Thursdays, 12:30 - 1:50PM, in IERF B015.  

  Adds, drops, etc.:  There are plenty of seats in the
classroom, so I will be happy to add you to the class DURING THE
FIRST WEEK. You may drop the course any time up through the sixth
week of classes. 

  Course Text:  There is no required text. Some of the
material will be taken from the following books: 

  [AMO] Ahuja, Magnanti and Orlin.   Network Flows ,
Prentice Hall, 1993. 

 [CLRS] Cormen, Leiserson, Rivest, and Stein.   Introduction to
Algorithms .  See also the  online errata . 

 [GJ] Garey and Johnson,  Computers and Intractability: A
Guide to the Theory of NP-completeness , W. H. Freeman and
Company 1979. 

 [P] Papadimitriou,  Computational Complexity  ,
Addison-Wesley, 1994. 
 

In addition,  course notes are available
online . Please be aware that the notes are from a previous
offering of 260, and although they cover roughly the same material
as I expect to, they do not necessarily have the same emphasis. You
are responsible for all material covered in the lecture, even if it
is not covered in the course notes. 

  Coursework and grading:  Due to the lack of teaching
assistance for this course, there will be no required homeworks.
However, you may find it helpful to study  Prof.
Dillencourt's homeworks  from last Winter. The graded
courseworks will consist of two midterms (each worth 30% of the
grade) and a comprehensive final exam (worth 40%). Note: I reserve
the right to assign a failing grade to a student who performs
extremely poorly on the final exam, irrespective of his/her
performance on the midterms. Similarly, I reserve the right to
assign a student who performs extremely well on the final exam a
higher grade than his/her course average would dictate. Exams are
closed-book, and sharing or copying answers is not allowed;
violating this honesty policy will result in failing the class. 

  Schedule 

  Week 1: Review of O-notation and algorithm analysis.  Graphs, graph
representation, and traversal. 
See also
 Guido van Rossum's
essay on graph representation in Python . 

 Week 2:  Shortest
paths . 

 Week 3: Network flow. 

 Week 4: Matching. MIDTERM. 

 Week 5: Dynamic programming.  Longest common subsequences ,
change-making problem,  optimal
triangulation . 

 Week 6: Greedy algorithms. Huffman coding,
 minimum spanning
trees , approximate traveling salesman and set cover. 

 Week 7: Linear programming. 

 Week 8: MIDTERM. NP-completeness: definitions. 

 Week 9: NP-completeness: Cook's theorem and
satisfiability. Thanksgiving day. 

 Week 10: NP-completeness: Example reductions.
 Case study: truck
scheduling algorithms.  Branch and bound. 

 Friday, Dec. 13, 10:30 - 12:30: FINAL EXAM.
  

Sample exams from the Fall 2001 offering of ICS 260:
   First midterm  [ solutions ]. 
  Second midterm  [ solutions ]. 
  Final exam  [ solutions ]. 
   D. Eppstein ,  ICS , UC
Irvine.
</body> 