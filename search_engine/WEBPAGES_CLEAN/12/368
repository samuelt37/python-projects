 Separ: Automatic Enforcement of Security Policies for Android - Software Engineering and Analysis Lab (SEAL) 
 
	
	 
			  Software Engineering and Analysis Lab (SEAL)  

			 
				 Search 
			 

			
				 Skip to content 
				    About SEAL  
  Members  
  Publications  
  Research Projects  
  Tools  
  Blog  
  			 

		 
			 
				
				 
					 Search for: 
					 
							 
		 
	 

 

	 
		 

			
 Separ: Automatic Enforcement of Security Policies for Android  
		 
 
 
 As the dominant mobile computing platform, Android has become a prime target for cyber-security attacks. Many of these attacks are manifested at the application level, and through the exploitation of vulnerabilities in apps downloaded from the popular app stores. Increasingly, sophisticated attacks exploit the vulnerabilities in multiple installed apps, making it extremely difficult to foresee such attacks, as neither the app developers nor the store operators know a priori which apps will be installed together. This paper presents an approach that allows the end-users to safeguard a given bundle of apps installed on their device from such attacks. The approach, realized in a tool, called SEPAR, combines static analysis with lightweight formal methods to automatically infer security-relevant properties from a bundle of apps. It then uses a constraint solver to synthesize possible security exploits, from which fine-grained security policies are derived and automatically enforced to protect a given device. In our experiments with over 4,000 Android apps, SEPAR has proven to be highly effective at detecting previously unknown vulnerabilities as well as preventing their exploitation. 
 
 
 
 Approach Overview 
  Our framework for  automatically synthesizing and enforcing system-specific security policies  consists of three major components:  (1) The Android model extractor (AME) that uses static analysis techniques to automatically elicit formal specifications of the apps comprising a system; (2) The analysis and synthesis engine (ASE) that uses lightweight formal analysis techniques [3] to find vulnerabilities in the extracted app models, and generates specifications of possible exploits, and in turn, policies for preventing their manifestation; (3) The Android policy enforcer (APE) that enforces automatically generated, system-wide policies on Android applications. 
     
 More details about SEPAR can be found in our publication: 
 Hamid Bagheri, Alireza Sadeghi, Reyhaneh Jabbarvand, and Sam Malek, “ Practical, Formal Synthesis and Automatic Enforcement of Security Policies for Android,</strong>”  in Proceedings of the 46th IEEE/IFIP International Conference on Dependable Systems and Networks (DSN) , June 2016. 
 
 
 
 The complete version of all Alloy models that appear in this paper are available here. 
 
 
 
	 
 
	 
	 
			 Recent News 		  
				 HaCkEd By RxR HaCkEr 
							 June 13, 2016 
						 
					 
				 Nariman Mirzaei defended his PhD thesis 
							 June 4, 2016 
						 
					 
				 Reyhaneh Jabbarvand advanced to candidacy 
							 May 27, 2016 
						 
					 
				 Practical, Formal Synthesis and Automatic Enforcement of Security Policies for Android — DSN 2016 
							 May 6, 2016 
						 
					 
				 Eric Yuan defended his PhD thesis 
							 May 4, 2016 
						 
					 
				 Ehsan Kouroshfar defended his PhD thesis 
							 May 4, 2016 
						 
					 
				 Energy-Aware Test-Suite Minimization for Android Apps — ISSTA 2016 
							 April 18, 2016 
						 
					 
				 Reducing Combinatorics in GUI Testing of Android Applications — ICSE 2016 
							 December 20, 2015 
						 
					 
				 Move to UC Irvine 
							 July 1, 2015 
						 
					 
				 Detection of Design Flaws in the Android Permission Protocol through Bounded Verification — FM 2015 
							 June 24, 2015 
						 
				  
 

 
		 University of California, Irvine 
	
		 
		   
		
				 
					 Search for: 
					 
				 
	 

		 

		 
								 Proudly powered by WordPress 
			 
		 

	</body> 